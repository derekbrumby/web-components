// Auto-generated by scripts/build-component-docs.mjs
export const componentDocs = {
  "wc-accordion": {
    "title": "<wc-accordion>",
    "tagline": "Documentation for <wc-accordion>",
    "usage": {
      "snippet": "<wc-accordion type=\"single\" collapsible>\n  <wc-accordion-item value=\"item-1\">\n    <span slot=\"trigger\">Is it accessible?</span>\n    <p slot=\"content\">Yes. It adheres to the WAI-ARIA design pattern.</p>\n  </wc-accordion-item>\n</wc-accordion>"
    },
    "attributes": [
      {
        "name": "`type` / `type`",
        "type": "`string`",
        "default": "—",
        "description": "Sets the underlying control type or behaviour preset."
      },
      {
        "name": "`collapsible` / `collapsible`",
        "type": "`string`",
        "default": "—",
        "description": "Allows the open item to be collapsed via repeated activation."
      },
      {
        "name": "`orientation` / `orientation`",
        "type": "`string`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      },
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "``",
        "description": "Currently selected value."
      },
      {
        "name": "`values` / `values`",
        "type": "`string[]`",
        "default": "—",
        "description": "Comma-separated list or array of selected values."
      }
    ],
    "events": [
      {
        "name": "`change`",
        "detail": "",
        "description": "Emitted event."
      }
    ],
    "slots": [],
    "css": [
      "--accordion-border",
      "--accordion-color",
      "--accordion-gap",
      "--accordion-radius",
      "--accordion-surface"
    ],
    "notes": [
      "Supports \"single\" or \"multiple\" expansion modes with optional collapsible behavior.",
      "Keyboard navigation for vertical and horizontal layouts.",
      "Extensive styling hooks via CSS custom properties and ::part selectors.",
      "Animation-ready content panels without imposing external styles."
    ]
  },
  "wc-accordion-item": {
    "title": "<wc-accordion-item>",
    "tagline": "Documentation for <wc-accordion-item>",
    "usage": {
      "snippet": "<wc-accordion type=\"single\" collapsible>\n  <wc-accordion-item value=\"item-1\">\n    <span slot=\"trigger\">Is it accessible?</span>\n    <p slot=\"content\">Yes. It adheres to the WAI-ARIA design pattern.</p>\n  </wc-accordion-item>\n</wc-accordion>"
    },
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`string`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`string`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`heading-level` / `headingLevel`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `heading-level` setting."
      }
    ],
    "events": [
      {
        "name": "`wc-accordion-item-toggled`",
        "detail": "`{ open: this.#open }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-accordion-item-request-toggle`",
        "detail": "`{ item: this, open: requestedState, originalEvent: triggerEvent }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--accordion-border",
      "--accordion-color",
      "--accordion-content-background",
      "--accordion-content-color",
      "--accordion-content-padding",
      "--accordion-focus-outline",
      "--accordion-focus-outline-offset",
      "--accordion-indicator-size",
      "--accordion-item-border",
      "--accordion-item-gap",
      "--accordion-item-radius",
      "--accordion-open-trigger-background",
      "--accordion-panel-background",
      "--accordion-panel-color",
      "--accordion-radius",
      "--accordion-surface",
      "--accordion-transition-duration",
      "--accordion-transition-easing",
      "--accordion-trigger-background",
      "--accordion-trigger-background-active",
      "--accordion-trigger-background-hover",
      "--accordion-trigger-color",
      "--accordion-trigger-font-size",
      "--accordion-trigger-font-weight",
      "--accordion-trigger-gap",
      "--accordion-trigger-padding"
    ],
    "notes": [
      "Supports \"single\" or \"multiple\" expansion modes with optional collapsible behavior.",
      "Keyboard navigation for vertical and horizontal layouts.",
      "Extensive styling hooks via CSS custom properties and ::part selectors.",
      "Animation-ready content panels without imposing external styles."
    ]
  },
  "wc-alert-dialog": {
    "title": "<wc-alert-dialog>",
    "tagline": "Documentation for <wc-alert-dialog>",
    "usage": {
      "snippet": "<wc-alert-dialog>\n  <button slot=\"trigger\">Delete account</button>\n  <span slot=\"title\">Are you absolutely sure?</span>\n  <span slot=\"description\">This action cannot be undone.</span>\n  <button slot=\"cancel\">Cancel</button>\n  <button slot=\"action\">Yes, delete account</button>\n</wc-alert-dialog>"
    },
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`boolean`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      }
    ],
    "events": [],
    "slots": [
      {
        "name": "`trigger`",
        "description": ""
      },
      {
        "name": "`cancel`",
        "description": ""
      },
      {
        "name": "`action`",
        "description": ""
      }
    ],
    "css": [
      "--alert-dialog-action-background",
      "--alert-dialog-action-color",
      "--alert-dialog-background",
      "--alert-dialog-body-color",
      "--alert-dialog-body-margin",
      "--alert-dialog-button-padding",
      "--alert-dialog-button-radius",
      "--alert-dialog-cancel-background",
      "--alert-dialog-cancel-color",
      "--alert-dialog-color",
      "--alert-dialog-description-color",
      "--alert-dialog-description-margin",
      "--alert-dialog-description-size",
      "--alert-dialog-footer-gap",
      "--alert-dialog-max-width",
      "--alert-dialog-overlay-backdrop-filter",
      "--alert-dialog-overlay-background",
      "--alert-dialog-padding",
      "--alert-dialog-radius",
      "--alert-dialog-shadow",
      "--alert-dialog-title-size",
      "--alert-dialog-title-weight",
      "--alert-dialog-transition-duration",
      "--alert-dialog-transition-easing",
      "--alert-dialog-z-index"
    ],
    "notes": [
      "Trigger slot to open the dialog and declarative open attribute/property.",
      "Focus trapping with automatic return to the previously focused element.",
      "Keyboard support (Esc closes, Tab wraps) and labelled content slots.",
      "Customisable styling hooks through CSS custom properties and ::part selectors."
    ]
  },
  "wc-alert": {
    "title": "<wc-alert>",
    "tagline": "Documentation for <wc-alert>",
    "usage": {
      "snippet": "<wc-alert variant=\"destructive\">\n  <svg slot=\"icon\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n    <path d=\"M12 9v4\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"1.5\"></path>\n    <path d=\"M12 17h.01\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"1.5\"></path>\n    <path d=\"M10.29 3.86L2.82 17.14A1.5 1.5 0 0 0 4.13 19.5h15.74a1.5 1.5 0 0 0 1.31-2.36L13.69 3.86a1.5 1.5 0 0 0-2.6 0z\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\"></path>\n  </svg>\n  <span slot=\"title\">Payment failed</span>\n  <p>Please verify your billing information and try again.</p>\n</wc-alert>"
    },
    "attributes": [
      {
        "name": "`variant` / `variant`",
        "type": "`string`",
        "default": "`\"default\"`",
        "description": "Selects the visual variant or tone for the surface."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-alert-background",
      "--wc-alert-border-color",
      "--wc-alert-color",
      "--wc-alert-content-gap",
      "--wc-alert-description-color",
      "--wc-alert-description-font-size",
      "--wc-alert-gap",
      "--wc-alert-icon-background",
      "--wc-alert-icon-color",
      "--wc-alert-icon-radius",
      "--wc-alert-icon-size",
      "--wc-alert-padding-block",
      "--wc-alert-padding-inline",
      "--wc-alert-radius",
      "--wc-alert-shadow",
      "--wc-alert-title-color",
      "--wc-alert-title-font-size",
      "--wc-alert-title-font-weight"
    ]
  },
  "wc-ascii-icon": {
    "title": "<wc-ascii-icon>",
    "tagline": "Documentation for <wc-ascii-icon>",
    "usage": {
      "snippet": "<wc-ascii-icon path=\"M12 2a10 10 0 1 1 0 20a10 10 0 0 1 0-20Zm-1 6.5v7l6-3.5l-6-3.5z\"></wc-ascii-icon>"
    },
    "attributes": [
      {
        "name": "`path` / `path`",
        "type": "`number | null`",
        "default": "—",
        "description": "Configures the `path` setting."
      },
      {
        "name": "`character` / `character`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `character` setting."
      },
      {
        "name": "`columns` / `columns`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `columns` setting."
      },
      {
        "name": "`column` / `column`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `column` setting."
      },
      {
        "name": "`rows` / `rows`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `rows` setting."
      },
      {
        "name": "`row` / `row`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `row` setting."
      },
      {
        "name": "`cell-size` / `cellSize`",
        "type": "`number`",
        "default": "—",
        "description": "Configures the `cell-size` setting."
      },
      {
        "name": "`padding` / `padding`",
        "type": "`number`",
        "default": "—",
        "description": "Configures the `padding` setting."
      },
      {
        "name": "`gap` / `gap`",
        "type": "`number`",
        "default": "—",
        "description": "Configures the `gap` setting."
      },
      {
        "name": "`aria-label` / `ariaLabel`",
        "type": "",
        "default": "—",
        "description": "Accessible label forwarded to the underlying control."
      },
      {
        "name": "`aria-labelledby` / `ariaLabelledby`",
        "type": "",
        "default": "—",
        "description": "Associates the control with labelled element IDs."
      },
      {
        "name": "`aria-hidden` / `ariaHidden`",
        "type": "",
        "default": "—",
        "description": "Forwards the corresponding ARIA attribute for accessibility."
      },
      {
        "name": "`role` / `role`",
        "type": "",
        "default": "—",
        "description": "Configures the `role` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-ascii-icon-background",
      "--wc-ascii-icon-character-color",
      "--wc-ascii-icon-font-family",
      "--wc-ascii-icon-font-weight",
      "--wc-ascii-icon-letter-spacing",
      "--wc-ascii-icon-size"
    ]
  },
  "wc-aspect-ratio": {
    "title": "<wc-aspect-ratio>",
    "tagline": "Documentation for <wc-aspect-ratio>",
    "usage": {
      "snippet": "<wc-aspect-ratio ratio=\"16/9\" style=\"max-width: 320px;\">\n  <img src=\"https://...\" alt=\"Example\" />\n</wc-aspect-ratio>"
    },
    "attributes": [
      {
        "name": "`ratio` / `ratio`",
        "type": "`number`",
        "default": "—",
        "description": "Specifies the width:height aspect ratio."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--aspect-ratio-background",
      "--aspect-ratio-border",
      "--aspect-ratio-border-radius",
      "--aspect-ratio-content-align",
      "--aspect-ratio-content-justify",
      "--aspect-ratio-expression",
      "--aspect-ratio-fallback-percent",
      "--aspect-ratio-object-fit",
      "--aspect-ratio-overflow",
      "--aspect-ratio-ratio",
      "--aspect-ratio-shadow"
    ]
  },
  "wc-audio-player": {
    "title": "<wc-audio-player>",
    "tagline": "Documentation for <wc-audio-player>",
    "attributes": [
      {
        "name": "`src` / `src`",
        "type": "`string`",
        "default": "``",
        "description": "External resource URL loaded by the component."
      },
      {
        "name": "`preload` / `preload`",
        "type": "`string`",
        "default": "`\"metadata\"`",
        "description": "Hints how aggressively the browser should preload media."
      },
      {
        "name": "`autoplay` / `autoplay`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Begins playback automatically when possible."
      },
      {
        "name": "`loop` / `loop`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Repeats playback when media reaches the end."
      },
      {
        "name": "`track-title` / `trackTitle`",
        "type": "`string`",
        "default": "`\"Now playing\"`",
        "description": "Configures the `track-title` setting."
      },
      {
        "name": "`track-subtitle` / `trackSubtitle`",
        "type": "`string`",
        "default": "`\"Use the controls to listen.\"`",
        "description": "Configures the `track-subtitle` setting."
      }
    ],
    "events": [
      {
        "name": "`audio-play-error`",
        "detail": "`{ error }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`audio-scrub`",
        "detail": "`{ time: value }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [
      {
        "name": "`title`",
        "description": ""
      }
    ],
    "css": [
      "--wc-audio-player-accent",
      "--wc-audio-player-background",
      "--wc-audio-player-foreground",
      "--wc-audio-player-gap",
      "--wc-audio-player-muted",
      "--wc-audio-player-progress-background",
      "--wc-audio-player-progress-color",
      "--wc-audio-player-radius",
      "--wc-audio-player-track-height"
    ]
  },
  "wc-avatar": {
    "title": "<wc-avatar>",
    "tagline": "Documentation for <wc-avatar>",
    "usage": {
      "snippet": "<wc-avatar src=\"https://...\" alt=\"Ada Lovelace\" initials=\"AL\"></wc-avatar>"
    },
    "attributes": [
      {
        "name": "`src` / `src`",
        "type": "`string`",
        "default": "``",
        "description": "External resource URL loaded by the component."
      },
      {
        "name": "`alt` / `alt`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `alt` setting."
      },
      {
        "name": "`initials` / `initials`",
        "type": "`string`",
        "default": "``",
        "description": "Fallback initials rendered inside avatars."
      },
      {
        "name": "`fallback-delay` / `fallbackDelay`",
        "type": "`number`",
        "default": "—",
        "description": "Configures the `fallback-delay` setting."
      },
      {
        "name": "`loading` / `loading`",
        "type": "`\"lazy\" | \"eager\" | \"auto\"`",
        "default": "—",
        "description": "Indicates that the component is in a loading state."
      },
      {
        "name": "`size` / `size`",
        "type": "",
        "default": "—",
        "description": "Adjusts spacing, padding, or icon sizing presets."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--avatar-background",
      "--avatar-border",
      "--avatar-fallback-background",
      "--avatar-fallback-color",
      "--avatar-fallback-font-size",
      "--avatar-fallback-font-weight",
      "--avatar-loading-opacity",
      "--avatar-radius",
      "--avatar-size",
      "--avatar-transition"
    ]
  },
  "wc-badge": {
    "title": "<wc-badge>",
    "tagline": "Documentation for <wc-badge>",
    "usage": {
      "snippet": "<wc-badge variant=\"secondary\">New release</wc-badge>\n<wc-badge href=\"/billing\">Billing</wc-badge>"
    },
    "attributes": [
      {
        "name": "`variant` / `variant`",
        "type": "`string`",
        "default": "`\"default\"`",
        "description": "Selects the visual variant or tone for the surface."
      },
      {
        "name": "`href` / `href`",
        "type": "`string | null`",
        "default": "—",
        "description": "Turns the component into a navigational link pointing to the provided URL."
      },
      {
        "name": "`target` / `target`",
        "type": "`string | null`",
        "default": "—",
        "description": "Forwarded to the underlying link target when `href` is set."
      },
      {
        "name": "`rel` / `rel`",
        "type": "`string | null`",
        "default": "—",
        "description": "Relationship metadata for anchored buttons or links."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-badge-background",
      "--wc-badge-border-color",
      "--wc-badge-color",
      "--wc-badge-focus-ring-color",
      "--wc-badge-font-size",
      "--wc-badge-font-weight",
      "--wc-badge-gap",
      "--wc-badge-hover-background",
      "--wc-badge-hover-border-color",
      "--wc-badge-letter-spacing",
      "--wc-badge-min-height",
      "--wc-badge-min-width",
      "--wc-badge-padding-block",
      "--wc-badge-padding-inline",
      "--wc-badge-radius",
      "--wc-badge-shadow",
      "--wc-badge-text-transform"
    ]
  },
  "wc-breadcrumb": {
    "title": "<wc-breadcrumb>",
    "tagline": "Documentation for <wc-breadcrumb>",
    "attributes": [
      {
        "name": "`label` / `label`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `label` setting."
      },
      {
        "name": "`aria-label` / `ariaLabel`",
        "type": "",
        "default": "—",
        "description": "Accessible label forwarded to the underlying control."
      },
      {
        "name": "`aria-labelledby` / `ariaLabelledby`",
        "type": "",
        "default": "—",
        "description": "Associates the control with labelled element IDs."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-breadcrumb-color",
      "--wc-breadcrumb-font-size",
      "--wc-breadcrumb-gap",
      "--wc-breadcrumb-padding",
      "--wc-breadcrumb-page-color",
      "--wc-breadcrumb-weight"
    ]
  },
  "wc-breadcrumb-item": {
    "title": "<wc-breadcrumb-item>",
    "tagline": "Documentation for <wc-breadcrumb-item>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-breadcrumb-gap"
    ]
  },
  "wc-breadcrumb-separator": {
    "title": "<wc-breadcrumb-separator>",
    "tagline": "Documentation for <wc-breadcrumb-separator>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-breadcrumb-separator-color"
    ]
  },
  "wc-breadcrumb-link": {
    "title": "<wc-breadcrumb-link>",
    "tagline": "Documentation for <wc-breadcrumb-link>",
    "attributes": [
      {
        "name": "`href` / `href`",
        "type": "`string`",
        "default": "``",
        "description": "Turns the component into a navigational link pointing to the provided URL."
      },
      {
        "name": "`target` / `target`",
        "type": "`string`",
        "default": "``",
        "description": "Forwarded to the underlying link target when `href` is set."
      },
      {
        "name": "`rel` / `rel`",
        "type": "`string`",
        "default": "``",
        "description": "Relationship metadata for anchored buttons or links."
      },
      {
        "name": "`download` / `download`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `download` setting."
      },
      {
        "name": "`aria-current` / `ariaCurrent`",
        "type": "`string`",
        "default": "``",
        "description": "Forwards the corresponding ARIA attribute for accessibility."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-breadcrumb-current-background",
      "--wc-breadcrumb-current-color",
      "--wc-breadcrumb-current-weight",
      "--wc-breadcrumb-link-background",
      "--wc-breadcrumb-link-color",
      "--wc-breadcrumb-link-focus-ring",
      "--wc-breadcrumb-link-gap",
      "--wc-breadcrumb-link-hover-background",
      "--wc-breadcrumb-link-hover-color",
      "--wc-breadcrumb-link-padding",
      "--wc-breadcrumb-link-radius",
      "--wc-breadcrumb-page-color"
    ]
  },
  "wc-breadcrumb-page": {
    "title": "<wc-breadcrumb-page>",
    "tagline": "Documentation for <wc-breadcrumb-page>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-breadcrumb-page-color",
      "--wc-breadcrumb-page-gap",
      "--wc-breadcrumb-page-weight"
    ]
  },
  "wc-breadcrumb-ellipsis": {
    "title": "<wc-breadcrumb-ellipsis>",
    "tagline": "Documentation for <wc-breadcrumb-ellipsis>",
    "attributes": [
      {
        "name": "`label` / `label`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `label` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-breadcrumb-ellipsis-background",
      "--wc-breadcrumb-ellipsis-color",
      "--wc-breadcrumb-ellipsis-radius",
      "--wc-breadcrumb-ellipsis-size"
    ]
  },
  "wc-button-group": {
    "title": "<wc-button-group>",
    "tagline": "Documentation for <wc-button-group>",
    "usage": {
      "snippet": "<wc-button-group aria-label=\"Mailbox actions\">\n  <button type=\"button\">Archive</button>\n  <button type=\"button\">Report</button>\n</wc-button-group>"
    },
    "attributes": [
      {
        "name": "`orientation` / `orientation`",
        "type": "`\"horizontal\" | \"vertical\"`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-button-group-separator": {
    "title": "<wc-button-group-separator>",
    "tagline": "Documentation for <wc-button-group-separator>",
    "usage": {
      "snippet": "<wc-button-group aria-label=\"Mailbox actions\">\n  <button type=\"button\">Archive</button>\n  <button type=\"button\">Report</button>\n</wc-button-group>"
    },
    "attributes": [
      {
        "name": "`orientation` / `orientation`",
        "type": "`\"horizontal\" | \"vertical\"`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-button-group-text": {
    "title": "<wc-button-group-text>",
    "tagline": "Documentation for <wc-button-group-text>",
    "usage": {
      "snippet": "<wc-button-group aria-label=\"Mailbox actions\">\n  <button type=\"button\">Archive</button>\n  <button type=\"button\">Report</button>\n</wc-button-group>"
    },
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-button": {
    "title": "<wc-button>",
    "tagline": "Documentation for <wc-button>",
    "usage": {
      "snippet": "<wc-button variant=\"outline\">Button</wc-button>\n<wc-button variant=\"outline\" size=\"icon\" aria-label=\"Submit\">\n  <svg aria-hidden=\"true\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <path d=\"M12 5v14m7-7H5\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n</wc-button>"
    },
    "attributes": [
      {
        "name": "`variant` / `variant`",
        "type": "`\"default\" | \"outline\" | \"ghost\" | \"destructive\" | \"secondary\" | \"link\"`",
        "default": "—",
        "description": "Selects the visual variant or tone for the surface."
      },
      {
        "name": "`size` / `size`",
        "type": "`\"default\" | \"sm\" | \"lg\" | \"icon\" | \"icon-sm\" | \"icon-lg\"`",
        "default": "—",
        "description": "Adjusts spacing, padding, or icon sizing presets."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`href` / `href`",
        "type": "`string`",
        "default": "``",
        "description": "Turns the component into a navigational link pointing to the provided URL."
      },
      {
        "name": "`target` / `target`",
        "type": "`string`",
        "default": "``",
        "description": "Forwarded to the underlying link target when `href` is set."
      },
      {
        "name": "`rel` / `rel`",
        "type": "`string`",
        "default": "``",
        "description": "Relationship metadata for anchored buttons or links."
      },
      {
        "name": "`type` / `type`",
        "type": "`\"button\" | \"submit\" | \"reset\"`",
        "default": "``",
        "description": "Sets the underlying control type or behaviour preset."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-button-background",
      "--wc-button-background-hover",
      "--wc-button-border-color",
      "--wc-button-border-color-hover",
      "--wc-button-border-width",
      "--wc-button-disabled-opacity",
      "--wc-button-focus-ring",
      "--wc-button-font-family",
      "--wc-button-font-size",
      "--wc-button-font-weight",
      "--wc-button-foreground",
      "--wc-button-foreground-hover",
      "--wc-button-gap",
      "--wc-button-letter-spacing",
      "--wc-button-min-block-size",
      "--wc-button-min-inline-size",
      "--wc-button-padding-block",
      "--wc-button-padding-inline",
      "--wc-button-radius",
      "--wc-button-shadow",
      "--wc-button-shadow-hover"
    ]
  },
  "wc-calendar": {
    "title": "<wc-calendar>",
    "tagline": "Documentation for <wc-calendar>",
    "usage": {
      "snippet": "<wc-calendar value=\"2025-06-12\" caption-layout=\"dropdown\"></wc-calendar>"
    },
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "``",
        "description": "Currently selected value."
      },
      {
        "name": "`min` / `min`",
        "type": "`string`",
        "default": "``",
        "description": "Lower bound for numeric or date ranges."
      },
      {
        "name": "`max` / `max`",
        "type": "`string`",
        "default": "``",
        "description": "Upper bound for numeric or date ranges."
      },
      {
        "name": "`locale` / `locale`",
        "type": "`string`",
        "default": "—",
        "description": "Locales or language codes used for formatting."
      },
      {
        "name": "`first-day-of-week` / `firstDayOfWeek`",
        "type": "`string`",
        "default": "—",
        "description": "Sets the starting weekday (0 = Sunday)."
      },
      {
        "name": "`time-zone` / `timeZone`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `time-zone` setting."
      },
      {
        "name": "`caption-layout` / `captionLayout`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `caption-layout` setting."
      },
      {
        "name": "`show-outside-days` / `showOutsideDays`",
        "type": "`string`",
        "default": "`true`",
        "description": "Whether the calendar should render trailing and leading days from adjacent months."
      }
    ],
    "events": [
      {
        "name": "`change`",
        "detail": "`{ value: iso, date: toDate(date), }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": []
  },
  "wc-card-header": {
    "title": "<wc-card-header>",
    "tagline": "Documentation for <wc-card-header>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-card-content": {
    "title": "<wc-card-content>",
    "tagline": "Documentation for <wc-card-content>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-card-footer": {
    "title": "<wc-card-footer>",
    "tagline": "Documentation for <wc-card-footer>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-card-title": {
    "title": "<wc-card-title>",
    "tagline": "Documentation for <wc-card-title>",
    "attributes": [
      {
        "name": "`level` / `level`",
        "type": "`number`",
        "default": "—",
        "description": "Configures the `level` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-card-description": {
    "title": "<wc-card-description>",
    "tagline": "Documentation for <wc-card-description>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-card-action": {
    "title": "<wc-card-action>",
    "tagline": "Documentation for <wc-card-action>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-card": {
    "title": "<wc-card>",
    "tagline": "Documentation for <wc-card>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--card-background",
      "--card-border-color",
      "--card-foreground",
      "--card-gap",
      "--card-padding",
      "--card-radius",
      "--card-shadow"
    ]
  },
  "wc-chat-message": {
    "title": "<wc-chat-message>",
    "tagline": "Documentation for <wc-chat-message>",
    "usage": {
      "snippet": "<wc-chat-message align=\"end\" variant=\"success\">\n  <img slot=\"avatar\" src=\"https://img.daisyui.com/images/profile/demo/anakeen@192.webp\" alt=\"Anakin\" />\n  This is where the fun begins.\n  <span slot=\"footer\">Seen</span>\n</wc-chat-message>"
    },
    "attributes": [
      {
        "name": "`align` / `align`",
        "type": "`\"start\" | \"end\"`",
        "default": "`\"start\"`",
        "description": "Positions the bubble on the leading (`start`) or trailing (`end`) edge of the thread."
      },
      {
        "name": "`variant` / `variant`",
        "type": "`string`",
        "default": "`\"neutral\"`",
        "description": "Colour theme for the bubble. Accepts `neutral`, `primary`, `secondary`, `accent`, `info`, `success`, `warning`, or `error`."
      }
    ],
    "events": [],
    "slots": [
      {
        "name": "`avatar`",
        "description": "Circular media well used for author imagery or initials."
      },
      {
        "name": "`header`",
        "description": "Metadata displayed above the chat bubble, such as author names or timestamps."
      },
      {
        "name": "`(default)`",
        "description": "Main chat body content. Accepts rich inline markup."
      },
      {
        "name": "`footer`",
        "description": "Supplementary metadata positioned below the bubble (e.g. delivery status)."
      }
    ],
    "css": [
      "--wc-chat-gap",
      "--wc-chat-avatar-size",
      "--wc-chat-bubble-radius",
      "--wc-chat-bubble-padding-inline",
      "--wc-chat-bubble-padding-block",
      "--wc-chat-bubble-background",
      "--wc-chat-bubble-color",
      "--wc-chat-bubble-shadow",
      "--wc-chat-bubble-max-width",
      "--wc-chat-bubble-font-size",
      "--wc-chat-meta-color",
      "--wc-chat-meta-font-size"
    ],
    "notes": [
      "Slots automatically hide when empty so avatars, headers, and footers are optional per message.",
      "Tweak bubble radius, alignment gap, and colour tokens via CSS properties to match your system."
    ]
  },
  "wc-carousel": {
    "title": "<wc-carousel>",
    "tagline": "Documentation for <wc-carousel>",
    "usage": {
      "snippet": "<wc-carousel>\n  <wc-carousel-content>\n    <wc-carousel-item>One</wc-carousel-item>\n    <wc-carousel-item>Two</wc-carousel-item>\n  </wc-carousel-content>\n  <wc-carousel-previous></wc-carousel-previous>\n  <wc-carousel-next></wc-carousel-next>\n</wc-carousel>"
    },
    "attributes": [
      {
        "name": "`loop` / `loop`",
        "type": "",
        "default": "—",
        "description": "Repeats playback when media reaches the end."
      },
      {
        "name": "`orientation` / `orientation`",
        "type": "",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      },
      {
        "name": "`align` / `align`",
        "type": "",
        "default": "—",
        "description": "Alignment within the chosen side."
      }
    ],
    "events": [
      {
        "name": "`carousel-select`",
        "detail": "`{ index }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--wc-carousel-accent",
      "--wc-carousel-control-offset",
      "--wc-carousel-focus-outline",
      "--wc-carousel-width"
    ]
  },
  "wc-carousel-content": {
    "title": "<wc-carousel-content>",
    "tagline": "Documentation for <wc-carousel-content>",
    "usage": {
      "snippet": "<wc-carousel>\n  <wc-carousel-content>\n    <wc-carousel-item>One</wc-carousel-item>\n    <wc-carousel-item>Two</wc-carousel-item>\n  </wc-carousel-content>\n  <wc-carousel-previous></wc-carousel-previous>\n  <wc-carousel-next></wc-carousel-next>\n</wc-carousel>"
    },
    "attributes": [],
    "events": [
      {
        "name": "`carousel-content-layout`",
        "detail": "`{ count: this.#slides.length, snapPoints: this.snapPoints, selectedIndex: this.#selectedIndex }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`carousel-content-select`",
        "detail": "`{ index: this.#selectedIndex }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`carousel-content-pointer-down`",
        "detail": "",
        "description": "Emitted event."
      },
      {
        "name": "`carousel-content-pointer-up`",
        "detail": "",
        "description": "Emitted event."
      },
      {
        "name": "`carousel-content-settle`",
        "detail": "`{ index }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--wc-carousel-align",
      "--wc-carousel-background",
      "--wc-carousel-gap",
      "--wc-carousel-radius"
    ]
  },
  "wc-carousel-item": {
    "title": "<wc-carousel-item>",
    "tagline": "Documentation for <wc-carousel-item>",
    "usage": {
      "snippet": "<wc-carousel>\n  <wc-carousel-content>\n    <wc-carousel-item>One</wc-carousel-item>\n    <wc-carousel-item>Two</wc-carousel-item>\n  </wc-carousel-content>\n  <wc-carousel-previous></wc-carousel-previous>\n  <wc-carousel-next></wc-carousel-next>\n</wc-carousel>"
    },
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-carousel-align",
      "--wc-carousel-item-width"
    ]
  },
  "wc-carousel-previous": {
    "title": "<wc-carousel-previous>",
    "tagline": "Documentation for <wc-carousel-previous>",
    "usage": {
      "snippet": "<wc-carousel>\n  <wc-carousel-content>\n    <wc-carousel-item>One</wc-carousel-item>\n    <wc-carousel-item>Two</wc-carousel-item>\n  </wc-carousel-content>\n  <wc-carousel-previous></wc-carousel-previous>\n  <wc-carousel-next></wc-carousel-next>\n</wc-carousel>"
    },
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-carousel-next": {
    "title": "<wc-carousel-next>",
    "tagline": "Documentation for <wc-carousel-next>",
    "usage": {
      "snippet": "<wc-carousel>\n  <wc-carousel-content>\n    <wc-carousel-item>One</wc-carousel-item>\n    <wc-carousel-item>Two</wc-carousel-item>\n  </wc-carousel-content>\n  <wc-carousel-previous></wc-carousel-previous>\n  <wc-carousel-next></wc-carousel-next>\n</wc-carousel>"
    },
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-area-chart": {
    "title": "<wc-area-chart>",
    "tagline": "Documentation for <wc-area-chart>",
    "attributes": [
      {
        "name": "`...BaseChartElement.observedAttributes` / `...BaseChartElement.observedAttributes`",
        "type": "",
        "default": "—",
        "description": "Configures the `...BaseChartElement.observedAttributes` setting."
      },
      {
        "name": "`stacked` / `stacked`",
        "type": "`boolean`",
        "default": "—",
        "description": "Configures the `stacked` setting."
      },
      {
        "name": "`curve` / `curve`",
        "type": "`'linear' | 'smooth'`",
        "default": "—",
        "description": "Configures the `curve` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-chart-grid",
      "--wc-chart-muted"
    ]
  },
  "wc-line-chart": {
    "title": "<wc-line-chart>",
    "tagline": "Documentation for <wc-line-chart>",
    "attributes": [
      {
        "name": "`...BaseChartElement.observedAttributes` / `...BaseChartElement.observedAttributes`",
        "type": "",
        "default": "—",
        "description": "Configures the `...BaseChartElement.observedAttributes` setting."
      },
      {
        "name": "`curve` / `curve`",
        "type": "`'linear' | 'smooth'`",
        "default": "—",
        "description": "Configures the `curve` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-chart-grid",
      "--wc-chart-muted"
    ]
  },
  "wc-pie-chart": {
    "title": "<wc-pie-chart>",
    "tagline": "Documentation for <wc-pie-chart>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-radar-chart": {
    "title": "<wc-radar-chart>",
    "tagline": "Documentation for <wc-radar-chart>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-chart-grid",
      "--wc-chart-muted"
    ]
  },
  "wc-radial-chart": {
    "title": "<wc-radial-chart>",
    "tagline": "Documentation for <wc-radial-chart>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-chart": {
    "title": "<wc-chart>",
    "tagline": "Documentation for <wc-chart>",
    "attributes": [
      {
        "name": "`data` / `data`",
        "type": "`string`",
        "default": "—",
        "description": "JSON configuration used to render the component."
      },
      {
        "name": "`config` / `config`",
        "type": "`string`",
        "default": "—",
        "description": "Chart.js or data table configuration object."
      },
      {
        "name": "`category-key` / `categoryKey`",
        "type": "`string`",
        "default": "—",
        "description": "Key used to read category/group labels from data entries."
      },
      {
        "name": "`hide-legend` / `hideLegend`",
        "type": "`string`",
        "default": "—",
        "description": "Suppresses chart legends from rendering."
      },
      {
        "name": "`caption` / `caption`",
        "type": "",
        "default": "—",
        "description": "Configures the `caption` setting."
      },
      {
        "name": "`aria-label` / `ariaLabel`",
        "type": "",
        "default": "—",
        "description": "Accessible label forwarded to the underlying control."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--tooltip-color",
      "--wc-chart-bar-radius"
    ]
  },
  "wc-checkbox": {
    "title": "<wc-checkbox>",
    "tagline": "Documentation for <wc-checkbox>",
    "usage": {
      "snippet": "<wc-checkbox checked>Accept terms and conditions.</wc-checkbox>"
    },
    "attributes": [
      {
        "name": "`checked` / `checked`",
        "type": "`boolean`",
        "default": "—",
        "description": "Marks the control as checked."
      },
      {
        "name": "`indeterminate` / `indeterminate`",
        "type": "`boolean`",
        "default": "—",
        "description": "Sets the control to the mixed/indeterminate state."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`required` / `required`",
        "type": "`boolean`",
        "default": "—",
        "description": "Marks the control as required for form submission."
      },
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--checkbox-background",
      "--checkbox-background-checked",
      "--checkbox-background-indeterminate",
      "--checkbox-border-color",
      "--checkbox-border-width",
      "--checkbox-focus-ring",
      "--checkbox-foreground",
      "--checkbox-gap",
      "--checkbox-label-color",
      "--checkbox-radius",
      "--checkbox-shadow",
      "--checkbox-size"
    ]
  },
  "wc-code-viewer": {
    "title": "<wc-code-viewer>",
    "tagline": "Documentation for <wc-code-viewer>",
    "attributes": [
      {
        "name": "`src` / `src`",
        "type": "`string | null`",
        "default": "—",
        "description": "External resource URL loaded by the component."
      },
      {
        "name": "`code` / `code`",
        "type": "`string | null`",
        "default": "—",
        "description": "Configures the `code` setting."
      },
      {
        "name": "`language` / `language`",
        "type": "`string | null`",
        "default": "—",
        "description": "Configures the `language` setting."
      },
      {
        "name": "`filename` / `filename`",
        "type": "`string | null`",
        "default": "—",
        "description": "Configures the `filename` setting."
      }
    ],
    "events": [
      {
        "name": "`code-loadstart`",
        "detail": "",
        "description": "Emitted event."
      },
      {
        "name": "`code-load`",
        "detail": "",
        "description": "Emitted event."
      },
      {
        "name": "`code-error`",
        "detail": "`{ source, error }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [],
    "notes": [
      "Displays content inside a styled <pre><code> block with accessible defaults.",
      "Supports fetching remote files via the `src` attribute while exposing loading/error events.",
      "Applies lightweight syntax highlighting heuristics based on language hints or file extensions.",
      "Provides CSS custom properties and parts for custom theming."
    ]
  },
  "wc-countdown": {
    "title": "<wc-countdown>",
    "tagline": "Rolling digit countdown for timers and stat transitions.",
    "usage": {
      "snippet": "<wc-countdown value=\"59\"></wc-countdown>",
      "description": "Update the value property to animate the digits."
    },
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`number`",
        "default": "`0`",
        "description": "Current numeric value, clamped between 0 and 999 and reflected to the attribute."
      },
      {
        "name": "`digits` / `digits`",
        "type": "`number`",
        "default": "—",
        "description": "Hint for the minimum digits to display (1–3). Mirrors the property and respects the `--digits` CSS override."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--digits",
      "--wc-countdown-transition-duration",
      "--wc-countdown-transition-easing",
      "--wc-countdown-width-delay",
      "--wc-countdown-width-duration",
      "--wc-countdown-width-easing"
    ],
    "notes": [
      "Sets `role=\"timer\"`, `aria-live=\"polite\"`, and `aria-atomic=\"true\"` for assistive technology updates.",
      "Automatically syncs the `--value` CSS variable and text content whenever the value changes.",
      "Use `digits` or the `--digits` CSS custom property to zero-pad the display when required."
    ]
  },
  "wc-collapsible": {
    "title": "<wc-collapsible>",
    "tagline": "Documentation for <wc-collapsible>",
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`boolean`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [
      {
        "name": "`openchange`",
        "detail": "`{ open: this.#open }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [
      {
        "name": "`summary`",
        "description": ""
      },
      {
        "name": "`peek`",
        "description": ""
      }
    ],
    "css": [
      "--collapsible-background",
      "--collapsible-border-radius",
      "--collapsible-content-background",
      "--collapsible-content-color",
      "--collapsible-content-gap",
      "--collapsible-header-gap",
      "--collapsible-preview-background",
      "--collapsible-preview-color",
      "--collapsible-summary-color",
      "--collapsible-surface",
      "--collapsible-transition-duration",
      "--collapsible-transition-easing",
      "--collapsible-trigger-background",
      "--collapsible-trigger-background-active",
      "--collapsible-trigger-color",
      "--collapsible-trigger-focus",
      "--collapsible-trigger-shadow",
      "--collapsible-trigger-size",
      "--collapsible-width"
    ]
  },
  "wc-combobox-option": {
    "title": "<wc-combobox-option>",
    "tagline": "Documentation for <wc-combobox-option>",
    "attributes": [
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--option-background",
      "--option-color",
      "--option-disabled-color",
      "--option-gap",
      "--option-highlighted-background",
      "--option-highlighted-color",
      "--option-indicator-color",
      "--option-padding",
      "--option-radius",
      "--wc-combobox-option-background",
      "--wc-combobox-option-color",
      "--wc-combobox-option-disabled-color",
      "--wc-combobox-option-gap",
      "--wc-combobox-option-highlighted-background",
      "--wc-combobox-option-highlighted-color",
      "--wc-combobox-option-indicator-color",
      "--wc-combobox-option-padding",
      "--wc-combobox-option-radius"
    ]
  },
  "wc-combobox-group": {
    "title": "<wc-combobox-group>",
    "tagline": "Documentation for <wc-combobox-group>",
    "attributes": [
      {
        "name": "`label` / `label`",
        "type": "",
        "default": "—",
        "description": "Configures the `label` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-combobox-group-label-color"
    ]
  },
  "wc-combobox": {
    "title": "<wc-combobox>",
    "tagline": "Documentation for <wc-combobox>",
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`WcComboboxOption[]`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      },
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`placeholder` / `placeholder`",
        "type": "",
        "default": "—",
        "description": "Hint text displayed when no value is provided."
      },
      {
        "name": "`search-placeholder` / `searchPlaceholder`",
        "type": "",
        "default": "—",
        "description": "Placeholder text for search input fields."
      },
      {
        "name": "`search-label` / `searchLabel`",
        "type": "",
        "default": "—",
        "description": "Accessible label for search input fields."
      },
      {
        "name": "`empty-label` / `emptyLabel`",
        "type": "",
        "default": "—",
        "description": "Label displayed when no items match."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [
      {
        "name": "`wc-combobox-toggle`",
        "detail": "`{ open: false }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-combobox-change`",
        "detail": "`{ value: this.#value, option: newValue ? option : null, }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [
      {
        "name": "`empty`",
        "description": ""
      }
    ],
    "css": [
      "--wc-combobox-empty-color",
      "--wc-combobox-icon-color",
      "--wc-combobox-list-max-height",
      "--wc-combobox-panel-background",
      "--wc-combobox-panel-border",
      "--wc-combobox-panel-offset",
      "--wc-combobox-panel-padding",
      "--wc-combobox-panel-radius",
      "--wc-combobox-panel-shadow",
      "--wc-combobox-panel-width",
      "--wc-combobox-panel-z-index",
      "--wc-combobox-placeholder-color",
      "--wc-combobox-search-background",
      "--wc-combobox-search-border",
      "--wc-combobox-search-icon-color",
      "--wc-combobox-search-padding",
      "--wc-combobox-search-radius",
      "--wc-combobox-trigger-background",
      "--wc-combobox-trigger-border",
      "--wc-combobox-trigger-color",
      "--wc-combobox-trigger-focus-ring",
      "--wc-combobox-trigger-height",
      "--wc-combobox-trigger-padding",
      "--wc-combobox-trigger-radius",
      "--wc-combobox-width"
    ]
  },
  "wc-context-menu": {
    "title": "<wc-context-menu>",
    "tagline": "Documentation for <wc-context-menu>",
    "usage": {
      "snippet": "<wc-context-menu></wc-context-menu>"
    },
    "attributes": [],
    "events": [
      {
        "name": "`toggle`",
        "detail": "`{ type: 'radio', group, value }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`select`",
        "detail": "`{ command: target.dataset.command || null }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--context-menu-backdrop",
      "--context-menu-background",
      "--context-menu-border",
      "--context-menu-color",
      "--context-menu-font-family",
      "--context-menu-indicator-color",
      "--context-menu-item-color",
      "--context-menu-item-highlight",
      "--context-menu-item-radius",
      "--context-menu-label-color",
      "--context-menu-min-width",
      "--context-menu-radius",
      "--context-menu-separator-color",
      "--context-menu-shadow",
      "--context-menu-shortcut-color",
      "--context-menu-submenu-min-width",
      "--context-menu-trigger-background",
      "--context-menu-trigger-border",
      "--context-menu-trigger-color",
      "--context-menu-trigger-font-size",
      "--context-menu-trigger-font-weight",
      "--context-menu-trigger-padding",
      "--context-menu-trigger-radius",
      "--context-menu-trigger-width"
    ]
  },
  "wc-data-table": {
    "title": "<wc-data-table>",
    "tagline": "Documentation for <wc-data-table>",
    "attributes": [
      {
        "name": "`page-size` / `pageSize`",
        "type": "`string`",
        "default": "—",
        "description": "Number of items displayed per page."
      },
      {
        "name": "`filter-placeholder` / `filterPlaceholder`",
        "type": "`string`",
        "default": "—",
        "description": "Placeholder text shown in filter inputs."
      },
      {
        "name": "`selectable` / `selectable`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `selectable` setting."
      },
      {
        "name": "`row-id-key` / `rowIdKey`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `row-id-key` setting."
      }
    ],
    "events": [
      {
        "name": "`data-table-action`",
        "detail": "`{ action: actionId, row: row.original, columnId, rowId, actionLabel: actionButton.textContent?.trim() || '', }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`data-table-selection-change`",
        "detail": "`{ rows, rowIds: selected.map((row) => row.__rowId), }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--data-table-muted-color"
    ]
  },
  "wc-table": {
    "title": "<wc-table>",
    "tagline": "Documentation for <wc-table>",
    "usage": {
      "snippet": "<wc-table>\n  <wc-table-caption>Recent invoices</wc-table-caption>\n  <wc-table-header>\n    <wc-table-row>\n      <wc-table-head style=\"width: 7.5rem;\">Invoice</wc-table-head>\n      <wc-table-head>Status</wc-table-head>\n      <wc-table-head>Method</wc-table-head>\n      <wc-table-head align=\"right\">Amount</wc-table-head>\n    </wc-table-row>\n  </wc-table-header>\n  <wc-table-body>\n    <wc-table-row>\n      <wc-table-cell>INV001</wc-table-cell>\n      <wc-table-cell>Paid</wc-table-cell>\n      <wc-table-cell>Credit Card</wc-table-cell>\n      <wc-table-cell align=\"right\">$250.00</wc-table-cell>\n    </wc-table-row>\n  </wc-table-body>\n</wc-table>",
      "description": "Compose captions, headers, bodies, and footers declaratively."
    },
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--table-background",
      "--table-border-color",
      "--table-radius",
      "--table-shadow",
      "--table-text-color",
      "--table-muted-color",
      "--table-header-background",
      "--table-header-color",
      "--table-footer-background",
      "--table-row-border",
      "--table-row-hover",
      "--table-row-selected",
      "--table-cell-padding-block",
      "--table-cell-padding-inline",
      "--table-caption-color"
    ],
    "notes": [
      "Child elements such as <wc-table-header> are mirrored into a semantic <table> and stay hidden in light DOM.",
      "Set data-state=\"selected\" on <wc-table-row> to highlight rows.",
      "Use align or scope attributes on <wc-table-head> / <wc-table-cell> for alignment and semantics."
    ]
  },
  "wc-date-picker": {
    "title": "<wc-date-picker>",
    "tagline": "Documentation for <wc-date-picker>",
    "usage": {
      "snippet": "<wc-date-picker mode=\"range\" value=\"2024-05-01..2024-05-07\"></wc-date-picker>"
    },
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "``",
        "description": "Currently selected value."
      },
      {
        "name": "`mode` / `mode`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `mode` setting."
      },
      {
        "name": "`min` / `min`",
        "type": "",
        "default": "—",
        "description": "Lower bound for numeric or date ranges."
      },
      {
        "name": "`max` / `max`",
        "type": "",
        "default": "—",
        "description": "Upper bound for numeric or date ranges."
      },
      {
        "name": "`locale` / `locale`",
        "type": "",
        "default": "—",
        "description": "Locales or language codes used for formatting."
      },
      {
        "name": "`first-day-of-week` / `firstDayOfWeek`",
        "type": "",
        "default": "—",
        "description": "Sets the starting weekday (0 = Sunday)."
      },
      {
        "name": "`placeholder` / `placeholder`",
        "type": "",
        "default": "—",
        "description": "Hint text displayed when no value is provided."
      },
      {
        "name": "`hide-presets` / `hidePresets`",
        "type": "",
        "default": "—",
        "description": "Configures the `hide-presets` setting."
      }
    ],
    "events": [
      {
        "name": "`date-change`",
        "detail": "",
        "description": "Emitted event."
      }
    ],
    "slots": [],
    "css": [
      "--wc-date-picker-accent",
      "--wc-date-picker-accent-soft",
      "--wc-date-picker-background",
      "--wc-date-picker-border",
      "--wc-date-picker-border-color",
      "--wc-date-picker-gap",
      "--wc-date-picker-muted",
      "--wc-date-picker-radius",
      "--wc-date-picker-shadow",
      "--wc-date-picker-surface"
    ]
  },
  "wc-dialog": {
    "title": "<wc-dialog>",
    "tagline": "Documentation for <wc-dialog>",
    "usage": {
      "snippet": "<wc-dialog>\n  <button slot=\"trigger\">Edit profile</button>\n  <span slot=\"title\">Edit profile</span>\n  <span slot=\"description\">Update your public profile information.</span>\n  <form>\n    <!-- dialog body content -->\n  </form>\n  <button slot=\"close\">Close</button>\n</wc-dialog>"
    },
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`boolean`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      },
      {
        "name": "`modal` / `modal`",
        "type": "`boolean`",
        "default": "—",
        "description": "Treats the component as a modal surface that traps focus."
      }
    ],
    "events": [],
    "slots": [
      {
        "name": "`trigger`",
        "description": ""
      },
      {
        "name": "`close`",
        "description": ""
      }
    ],
    "css": [
      "--dialog-background",
      "--dialog-body-gap",
      "--dialog-body-margin",
      "--dialog-close-background",
      "--dialog-close-color",
      "--dialog-close-hover-background",
      "--dialog-close-radius",
      "--dialog-color",
      "--dialog-description-color",
      "--dialog-description-margin",
      "--dialog-description-size",
      "--dialog-footer-gap",
      "--dialog-max-height",
      "--dialog-overlay-backdrop-filter",
      "--dialog-overlay-background",
      "--dialog-padding",
      "--dialog-radius",
      "--dialog-shadow",
      "--dialog-title-size",
      "--dialog-title-weight",
      "--dialog-transition-duration",
      "--dialog-transition-easing",
      "--dialog-width",
      "--dialog-z-index"
    ],
    "notes": [
      "Supports modal (default) and non-modal presentations with focus trapping when modal.",
      "Declarative and imperative control through the `open` attribute/property and `show`/`hide` helpers.",
      "Accessible labelling via dedicated `title` and `description` slots and automatic announcements.",
      "Keyboard support (Esc to close, Tab trapping), overlay click dismissal, and return focus to the trigger.",
      "Customisable styling with CSS custom properties and exposed `::part` selectors."
    ]
  },
  "wc-drawer": {
    "title": "<wc-drawer>",
    "tagline": "Documentation for <wc-drawer>",
    "usage": {
      "snippet": "<wc-drawer placement=\"bottom\">\n  <button slot=\"trigger\">Open drawer</button>\n  <span slot=\"title\">Move goal</span>\n  <span slot=\"description\">Set your daily activity goal.</span>\n  <form>\n    <!-- drawer body -->\n  </form>\n  <div slot=\"footer\">\n    <button type=\"submit\">Save</button>\n    <button type=\"button\" data-drawer-close>Cancel</button>\n  </div>\n</wc-drawer>"
    },
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`boolean`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      },
      {
        "name": "`placement` / `placement`",
        "type": "`\"top\" | \"right\" | \"bottom\" | \"left\"`",
        "default": "—",
        "description": "Preferred tooltip or popover placement position."
      }
    ],
    "events": [],
    "slots": [
      {
        "name": "`trigger`",
        "description": ""
      }
    ],
    "css": [
      "--drawer-background",
      "--drawer-color",
      "--drawer-description-color",
      "--drawer-description-size",
      "--drawer-header-gap",
      "--drawer-height",
      "--drawer-max-height",
      "--drawer-max-width",
      "--drawer-overlay-backdrop-filter",
      "--drawer-overlay-background",
      "--drawer-padding",
      "--drawer-radius",
      "--drawer-section-gap",
      "--drawer-shadow",
      "--drawer-title-size",
      "--drawer-title-tracking",
      "--drawer-title-weight",
      "--drawer-transition-duration",
      "--drawer-transition-easing",
      "--drawer-width",
      "--drawer-z-index"
    ]
  },
  "wc-sheet": {
    "title": "<wc-sheet>",
    "tagline": "Documentation for <wc-sheet>",
    "usage": {
      "snippet": "<wc-sheet side=\"right\">\n  <button slot=\"trigger\">Open sheet</button>\n  <span slot=\"title\">Edit profile</span>\n  <span slot=\"description\">Make changes to your profile here.</span>\n  <form>\n    <!-- sheet body -->\n  </form>\n  <div slot=\"footer\">\n    <button type=\"submit\">Save</button>\n    <button type=\"button\" data-sheet-close>Cancel</button>\n  </div>\n</wc-sheet>"
    },
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Controls whether the sheet is visible."
      },
      {
        "name": "`side` / `side`",
        "type": "`\"top\" | \"right\" | \"bottom\" | \"left\"`",
        "default": "`\"right\"`",
        "description": "Chooses the viewport edge the sheet appears from."
      }
    ],
    "properties": [
      {
        "name": "`show()`",
        "type": "`() => void`",
        "default": "—",
        "description": "Opens the sheet programmatically."
      },
      {
        "name": "`hide()`",
        "type": "`() => void`",
        "default": "—",
        "description": "Closes the sheet programmatically."
      },
      {
        "name": "`toggle(force?)`",
        "type": "`(force?: boolean) => void`",
        "default": "—",
        "description": "Toggles the open state or forces a specific value."
      }
    ],
    "events": [
      {
        "name": "`sheet-open`",
        "detail": "`void`",
        "description": "Fires after the sheet finishes opening."
      },
      {
        "name": "`sheet-close`",
        "detail": "`void`",
        "description": "Fires after the sheet finishes closing."
      }
    ],
    "slots": [
      { "name": "`trigger`", "description": "Element that toggles the sheet." },
      { "name": "`title`", "description": "Heading content announced by assistive technology." },
      { "name": "`description`", "description": "Supplementary description for the sheet." },
      { "name": "`close`", "description": "Optional close control rendered beside the title." },
      { "name": "`footer`", "description": "Footer actions such as Save/Cancel buttons." },
      { "name": "`default`", "description": "Main body content for the sheet." }
    ],
    "css": [
      "--sheet-background",
      "--sheet-body-gap",
      "--sheet-color",
      "--sheet-description-color",
      "--sheet-description-size",
      "--sheet-footer-gap",
      "--sheet-header-gap",
      "--sheet-max-height",
      "--sheet-max-width",
      "--sheet-overlay-backdrop-filter",
      "--sheet-overlay-background",
      "--sheet-padding",
      "--sheet-radius",
      "--sheet-section-gap",
      "--sheet-shadow",
      "--sheet-title-size",
      "--sheet-title-tracking",
      "--sheet-title-weight",
      "--sheet-transition-duration",
      "--sheet-transition-easing",
      "--sheet-width",
      "--sheet-z-index"
    ],
    "notes": [
      "Slot elements with `[data-sheet-close]` close the sheet automatically when activated.",
      "Trigger elements receive `aria-expanded` to mirror the open state."
    ]
  },
  "wc-dropdown-menu": {
    "title": "<wc-dropdown-menu>",
    "tagline": "Documentation for <wc-dropdown-menu>",
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Controls whether the component is expanded or visible."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-dropdown-animation",
      "--wc-dropdown-background",
      "--wc-dropdown-border-color",
      "--wc-dropdown-focus-outline",
      "--wc-dropdown-offset",
      "--wc-dropdown-padding",
      "--wc-dropdown-radius",
      "--wc-dropdown-shadow",
      "--wc-dropdown-trigger-background",
      "--wc-dropdown-trigger-background-hover",
      "--wc-dropdown-trigger-color",
      "--wc-dropdown-trigger-shadow",
      "--wc-dropdown-width"
    ]
  },
  "wc-dropdown-item": {
    "title": "<wc-dropdown-item>",
    "tagline": "Documentation for <wc-dropdown-item>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-dropdown-checkbox-item": {
    "title": "<wc-dropdown-checkbox-item>",
    "tagline": "Documentation for <wc-dropdown-checkbox-item>",
    "attributes": [
      {
        "name": "`checked` / `checked`",
        "type": "`boolean | 'indeterminate'`",
        "default": "`false`",
        "description": "Marks the control as checked."
      },
      {
        "name": "`indeterminate` / `indeterminate`",
        "type": "",
        "default": "—",
        "description": "Sets the control to the mixed/indeterminate state."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-dropdown-radio-group": {
    "title": "<wc-dropdown-radio-group>",
    "tagline": "Documentation for <wc-dropdown-radio-group>",
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string | null`",
        "default": "—",
        "description": "Currently selected value."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-dropdown-radio-item": {
    "title": "<wc-dropdown-radio-item>",
    "tagline": "Documentation for <wc-dropdown-radio-item>",
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string | null`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-dropdown-label": {
    "title": "<wc-dropdown-label>",
    "tagline": "Documentation for <wc-dropdown-label>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-dropdown-label-color",
      "--wc-dropdown-label-padding"
    ]
  },
  "wc-dropdown-separator": {
    "title": "<wc-dropdown-separator>",
    "tagline": "Documentation for <wc-dropdown-separator>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-dropdown-separator-color",
      "--wc-dropdown-separator-margin"
    ]
  },
  "wc-dropdown-submenu": {
    "title": "<wc-dropdown-submenu>",
    "tagline": "Documentation for <wc-dropdown-submenu>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-dropdown-animation",
      "--wc-dropdown-background",
      "--wc-dropdown-padding",
      "--wc-dropdown-radius",
      "--wc-dropdown-shadow",
      "--wc-dropdown-width"
    ]
  },
  "wc-form": {
    "title": "<wc-form>",
    "tagline": "Documentation for <wc-form>",
    "attributes": [
      {
        "name": "`submit-label` / `submitLabel`",
        "type": "`string`",
        "default": "—",
        "description": "Label for submit buttons in forms."
      }
    ],
    "events": [
      {
        "name": "`wc-form-submit`",
        "detail": "",
        "description": "Emitted event."
      },
      {
        "name": "`wc-form-data`",
        "detail": "",
        "description": "Emitted event."
      }
    ],
    "slots": [],
    "css": [
      "--wc-form-background",
      "--wc-form-border",
      "--wc-form-field-background",
      "--wc-form-field-border",
      "--wc-form-field-border-focus",
      "--wc-form-field-border-hover",
      "--wc-form-field-radius",
      "--wc-form-font-size",
      "--wc-form-foreground",
      "--wc-form-gap",
      "--wc-form-input-padding",
      "--wc-form-label-weight",
      "--wc-form-message-error",
      "--wc-form-message-error-color",
      "--wc-form-message-size",
      "--wc-form-muted",
      "--wc-form-radius",
      "--wc-form-shadow",
      "--wc-form-submit-background",
      "--wc-form-submit-color",
      "--wc-form-submit-hover",
      "--wc-form-transition"
    ]
  },
  "wc-field": {
    "title": "<wc-field>",
    "tagline": "Documentation for <wc-field>",
    "usage": {
      "imports": ["../src/field.js", "../src/switch.js"],
      "snippet": "<wc-field-set>\n  <wc-field-legend>Profile</wc-field-legend>\n  <wc-field-group>\n    <wc-field>\n      <wc-field-label for=\"name\">Full name</wc-field-label>\n      <input id=\"name\" placeholder=\"Ada Lovelace\" />\n      <wc-field-description>Shown on invoices and receipts.</wc-field-description>\n    </wc-field>\n    <wc-field orientation=\"horizontal\">\n      <wc-switch id=\"announcements\"></wc-switch>\n      <wc-field-label for=\"announcements\">Product announcements</wc-field-label>\n    </wc-field>\n  </wc-field-group>\n</wc-field-set>"
    },
    "attributes": [
      {
        "name": "`orientation` / `orientation`",
        "type": "`\"vertical\" | \"horizontal\" | \"responsive\"`",
        "default": "`\"vertical\"`",
        "description": "Switches the flex layout for slotted content. `responsive` promotes to columns when the container is at least 640px wide."
      }
    ],
    "slots": [
      {
        "name": "`default`",
        "description": "Labels, controls, helper text, and nested field primitives."
      }
    ],
    "css": [
      "--wc-field-gap",
      "--wc-field-horizontal-gap",
      "--wc-field-responsive-gap",
      "--wc-field-min-label-width",
      "--wc-field-border-width",
      "--wc-field-border-inset",
      "--wc-field-border-color",
      "--wc-field-invalid-border"
    ],
    "notes": [
      "Ships companion elements: <wc-field-group>, <wc-field-set>, <wc-field-legend>, <wc-field-label>, <wc-field-content>, <wc-field-description>, <wc-field-title>, <wc-field-separator>, and <wc-field-error>.",
      "Set `data-invalid` on <wc-field> to toggle error highlighting and pair with <wc-field-error> for announced messages.",
      "<wc-field-group> exposes container queries so fields with `orientation=\"responsive\"` adapt to the available width."
    ]
  },
  "wc-hover-card": {
    "title": "<wc-hover-card>",
    "tagline": "Documentation for <wc-hover-card>",
    "usage": {
      "snippet": "<wc-hover-card>\n  <a slot=\"trigger\" href=\"https://example.com\">Profile</a>\n  <div slot=\"content\">Hello world</div>\n</wc-hover-card>"
    },
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`boolean`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      },
      {
        "name": "`default-open` / `defaultOpen`",
        "type": "",
        "default": "—",
        "description": "Expands the element the first time it renders."
      },
      {
        "name": "`open-delay` / `openDelay`",
        "type": "`number`",
        "default": "—",
        "description": "Delay before opening after pointer enter or focus."
      },
      {
        "name": "`close-delay` / `closeDelay`",
        "type": "`number`",
        "default": "—",
        "description": "Delay in milliseconds before closing on pointer leave."
      },
      {
        "name": "`side` / `side`",
        "type": "`HoverCardSide`",
        "default": "—",
        "description": "Preferred side for popover-like placements."
      },
      {
        "name": "`align` / `align`",
        "type": "`HoverCardAlign`",
        "default": "—",
        "description": "Alignment within the chosen side."
      },
      {
        "name": "`side-offset` / `sideOffset`",
        "type": "",
        "default": "—",
        "description": "Offset distance between trigger and surface."
      },
      {
        "name": "`align-offset` / `alignOffset`",
        "type": "",
        "default": "—",
        "description": "Pixel adjustment applied after alignment."
      },
      {
        "name": "`hide-arrow` / `hideArrow`",
        "type": "",
        "default": "—",
        "description": "Hides decorative arrows from overlay surfaces."
      }
    ],
    "events": [
      {
        "name": "`openchange`",
        "detail": "`{ open: value }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [
      {
        "name": "`content`",
        "description": ""
      }
    ],
    "css": [
      "--hover-card-align-offset",
      "--hover-card-arrow-shadow",
      "--hover-card-arrow-size",
      "--hover-card-border",
      "--hover-card-color",
      "--hover-card-gap",
      "--hover-card-max-width",
      "--hover-card-min-width",
      "--hover-card-padding",
      "--hover-card-radius",
      "--hover-card-shadow",
      "--hover-card-side-offset",
      "--hover-card-surface",
      "--hover-card-transition-duration",
      "--hover-card-transition-timing",
      "--hover-card-trigger-cursor",
      "--hover-card-trigger-focus-radius",
      "--hover-card-trigger-focus-shadow",
      "--hover-card-z-index",
      "--radix-hover-card-content-available-height",
      "--radix-hover-card-content-available-width",
      "--radix-hover-card-content-transform-origin",
      "--radix-hover-card-trigger-height",
      "--radix-hover-card-trigger-width"
    ]
  },
  "wc-input": {
    "title": "<wc-input>",
    "tagline": "Documentation for <wc-input>",
    "usage": {
      "snippet": "<wc-input type=\"email\" placeholder=\"Email\"></wc-input>"
    },
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Current value of the control."
      },
      {
        "name": "`type` / `type`",
        "type": "`string`",
        "default": "`\"text\"`",
        "description": "Native input type passed through to the underlying control."
      },
      {
        "name": "`placeholder` / `placeholder`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Hint text displayed when the field is empty."
      },
      {
        "name": "`name` / `name`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Form field name used during submission."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables interaction and applies `data-disabled` styling hooks."
      },
      {
        "name": "`readonly` / `readOnly`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Prevents user edits while keeping the value selectable."
      },
      {
        "name": "`required` / `required`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Marks the field as required for native constraint validation."
      },
      {
        "name": "`autocomplete` / `autocomplete`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Hints the browser about expected values such as `email` or `name`."
      },
      {
        "name": "`inputmode` / `inputMode`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Suggests a virtual keyboard layout on touch devices."
      },
      {
        "name": "`pattern` / `pattern`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Regular expression used for native validation."
      },
      {
        "name": "`min` / `min`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Lower bound for numeric, date, or time inputs."
      },
      {
        "name": "`max` / `max`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Upper bound for numeric, date, or time inputs."
      },
      {
        "name": "`step` / `step`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Value granularity for numeric interfaces."
      },
      {
        "name": "`minlength` / `minLength`",
        "type": "`number | null`",
        "default": "`null`",
        "description": "Minimum number of characters required."
      },
      {
        "name": "`maxlength` / `maxLength`",
        "type": "`number | null`",
        "default": "`null`",
        "description": "Maximum number of characters accepted."
      },
      {
        "name": "`enterkeyhint` / `enterKeyHint`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Sets the action hint for on-screen keyboards."
      },
      {
        "name": "`autocapitalize` / `autocapitalize`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Controls automatic capitalisation on supporting devices."
      },
      {
        "name": "`autocorrect` / `autocorrect`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Toggles platform autocorrect behaviour."
      },
      {
        "name": "`spellcheck` / `spellcheck`",
        "type": "`string`",
        "default": "`\"\"`",
        "description": "Controls spell checking for the field."
      }
    ],
    "properties": [
      {
        "name": "`form`",
        "type": "`HTMLFormElement | null`",
        "default": "`null`",
        "description": "Parent form when the input is associated."
      },
      {
        "name": "`files`",
        "type": "`FileList | null`",
        "default": "`null`",
        "description": "Selected files when `type` is set to `file`."
      },
      {
        "name": "`inputElement`",
        "type": "`HTMLInputElement`",
        "default": "—",
        "description": "Direct reference to the internal `<input>` element."
      }
    ],
    "events": [
      {
        "name": "`input`",
        "detail": "—",
        "description": "Mirrors the native `input` event when the value changes."
      },
      {
        "name": "`change`",
        "detail": "—",
        "description": "Dispatched when the underlying input emits `change`."
      },
      {
        "name": "`invalid`",
        "detail": "—",
        "description": "Re-emitted when browser validation fails."
      }
    ],
    "slots": [],
    "css": [
      "--wc-input-inline-size",
      "--wc-input-font-family",
      "--wc-input-font-size",
      "--wc-input-font-weight",
      "--wc-input-letter-spacing",
      "--wc-input-line-height",
      "--wc-input-radius",
      "--wc-input-padding-inline",
      "--wc-input-padding-block",
      "--wc-input-background",
      "--wc-input-background-hover",
      "--wc-input-background-disabled",
      "--wc-input-border",
      "--wc-input-border-hover",
      "--wc-input-border-focus",
      "--wc-input-shadow-focus",
      "--wc-input-color",
      "--wc-input-placeholder",
      "--wc-input-caret-color",
      "--wc-input-transition-duration",
      "::part(container)",
      "::part(input)"
    ],
    "notes": [
      "Form-associated element that participates in native submission, reset, and state restoration.",
      "Supports `type=\"file\"` with FileList form values and a `data-has-files` host attribute when files are selected.",
      "Applies `data-empty` and `data-disabled` attributes so empty or disabled states are easy to style."
    ]
  },
  "wc-kbd": {
    "title": "<wc-kbd>",
    "tagline": "Documentation for <wc-kbd>",
    "usage": {
      "snippet": "<wc-kbd>Ctrl</wc-kbd>\n<wc-kbd-group>\n  <wc-kbd>Ctrl</wc-kbd>\n  <span>+</span>\n  <wc-kbd>B</wc-kbd>\n</wc-kbd-group>"
    },
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-kbd-group": {
    "title": "<wc-kbd-group>",
    "tagline": "Documentation for <wc-kbd-group>",
    "usage": {
      "snippet": "<wc-kbd>Ctrl</wc-kbd>\n<wc-kbd-group>\n  <wc-kbd>Ctrl</wc-kbd>\n  <span>+</span>\n  <wc-kbd>B</wc-kbd>\n</wc-kbd-group>"
    },
    "attributes": [
      {
        "name": "`orientation` / `orientation`",
        "type": "`\"horizontal\" | \"vertical\"`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-label": {
    "title": "<wc-label>",
    "tagline": "Documentation for <wc-label>",
    "usage": {
      "snippet": "<wc-label for=\"first-name\">First name</wc-label>\n<input id=\"first-name\" type=\"text\" />"
    },
    "attributes": [
      {
        "name": "`for` / `for`",
        "type": "",
        "default": "—",
        "description": "Configures the `for` setting."
      }
    ],
    "events": [],
    "slots": [
      {
        "name": "`control`",
        "description": ""
      }
    ],
    "css": [
      "--label-background",
      "--label-color",
      "--label-cursor",
      "--label-focus-outline",
      "--label-focus-outline-offset",
      "--label-font-size",
      "--label-font-weight",
      "--label-gap",
      "--label-gap-with-control",
      "--label-line-height",
      "--label-padding-block",
      "--label-padding-inline",
      "--label-radius"
    ]
  },
  "wc-markdown-viewer": {
    "title": "<wc-markdown-viewer>",
    "tagline": "Documentation for <wc-markdown-viewer>",
    "attributes": [
      {
        "name": "`src` / `src`",
        "type": "`string | null`",
        "default": "—",
        "description": "External resource URL loaded by the component."
      },
      {
        "name": "`markdown` / `markdown`",
        "type": "`string | null`",
        "default": "—",
        "description": "Configures the `markdown` setting."
      }
    ],
    "events": [
      {
        "name": "`markdown-loadstart`",
        "detail": "",
        "description": "Emitted event."
      },
      {
        "name": "`markdown-load`",
        "detail": "",
        "description": "Emitted event."
      },
      {
        "name": "`markdown-error`",
        "detail": "`{ source, error }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [],
    "notes": [
      "Parses common Markdown syntax (headings, lists, emphasis, block quotes, code blocks, tables).",
      "Sanitizes the generated HTML to prevent XSS and enforces safe URL protocols.",
      "Supports loading remote markdown documents via the `src` attribute or property.",
      "Provides styling hooks through CSS custom properties and `::part` selectors."
    ]
  },
  "wc-menubar": {
    "title": "<wc-menubar>",
    "tagline": "Documentation for <wc-menubar>",
    "usage": {
      "snippet": "<wc-menubar></wc-menubar>"
    },
    "attributes": [],
    "events": [
      {
        "name": "`menubar-checkbox-toggle`",
        "detail": "`{ item: key, checked: true }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`menubar-radio-change`",
        "detail": "`{ value }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`menubar-select`",
        "detail": "`{ menu: menu.getAttribute('data-menu'), label: item.textContent?.trim() || '' }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": []
  },
  "wc-mockup-phone": {
    "title": "<wc-mockup-phone>",
    "tagline": "Documentation for <wc-mockup-phone>",
    "usage": {
      "snippet": "<wc-mockup-phone wallpaper=\"https://example.com/wallpaper.jpg\"></wc-mockup-phone>"
    },
    "attributes": [
      {
        "name": "`wallpaper` / `wallpaper`",
        "type": "`string`",
        "default": "``",
        "description": "Background image applied to device mockups."
      },
      {
        "name": "`alt` / `alt`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `alt` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--mockup-phone-aspect-ratio",
      "--mockup-phone-background",
      "--mockup-phone-border-color",
      "--mockup-phone-border-width",
      "--mockup-phone-camera-background",
      "--mockup-phone-camera-height",
      "--mockup-phone-camera-offset",
      "--mockup-phone-camera-radius",
      "--mockup-phone-camera-width",
      "--mockup-phone-max-width",
      "--mockup-phone-padding",
      "--mockup-phone-radius",
      "--mockup-phone-radius-enhanced"
    ]
  },
  "wc-navigation-menu": {
    "title": "<wc-navigation-menu>",
    "tagline": "Documentation for <wc-navigation-menu>",
    "usage": {
      "snippet": "<wc-navigation-menu></wc-navigation-menu>"
    },
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--indicator-offset",
      "--indicator-width",
      "--navigation-menu-viewport-height",
      "--navigation-menu-viewport-width"
    ]
  },
  "wc-otp-field": {
    "title": "<wc-otp-field>",
    "tagline": "Documentation for <wc-otp-field>",
    "attributes": [
      {
        "name": "`length` / `length`",
        "type": "`number`",
        "default": "—",
        "description": "Number of inputs or steps rendered."
      },
      {
        "name": "`validation-type` / `validationType`",
        "type": "`ValidationType`",
        "default": "—",
        "description": "Configures the `validation-type` setting."
      },
      {
        "name": "`type` / `type`",
        "type": "`'text'|'password'`",
        "default": "—",
        "description": "Sets the underlying control type or behaviour preset."
      },
      {
        "name": "`orientation` / `orientation`",
        "type": "`Orientation`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      },
      {
        "name": "`auto-submit` / `autoSubmit`",
        "type": "`boolean`",
        "default": "—",
        "description": "Automatically submits the surrounding form when the value changes."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`readonly` / `readonly`",
        "type": "",
        "default": "—",
        "description": "Prevents user edits while keeping value selectable."
      },
      {
        "name": "`placeholder` / `placeholder`",
        "type": "`string`",
        "default": "—",
        "description": "Hint text displayed when no value is provided."
      },
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`dir` / `dir`",
        "type": "`'ltr'|'rtl'|'auto'`",
        "default": "—",
        "description": "Directional text context (ltr or rtl)."
      },
      {
        "name": "`name` / `name`",
        "type": "",
        "default": "—",
        "description": "Name used when participating in forms or for identification."
      },
      {
        "name": "`autocomplete` / `autocomplete`",
        "type": "`string`",
        "default": "`\"one-time-code\"`",
        "description": "Native autocomplete hint forwarded to the input."
      },
      {
        "name": "`autofocus` / `autofocus`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Focuses the control automatically when it connects."
      }
    ],
    "events": [
      {
        "name": "`valuechange`",
        "detail": "`{ value: this.#value }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`autosubmit`",
        "detail": "`{ value: this.#value }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--otp-bg",
      "--otp-border",
      "--otp-border-focus",
      "--otp-color",
      "--otp-font-size",
      "--otp-gap",
      "--otp-input-size",
      "--otp-radius",
      "--otp-shadow-focus"
    ]
  },
  "wc-pagination": {
    "title": "<wc-pagination>",
    "tagline": "Documentation for <wc-pagination>",
    "attributes": [
      {
        "name": "`label` / `label`",
        "type": "`string`",
        "default": "`\"Pagination\"`",
        "description": "Configures the `label` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-pagination-justify"
    ]
  },
  "wc-pagination-content": {
    "title": "<wc-pagination-content>",
    "tagline": "Documentation for <wc-pagination-content>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-pagination-gap",
      "--wc-pagination-wrap"
    ]
  },
  "wc-pagination-item": {
    "title": "<wc-pagination-item>",
    "tagline": "Documentation for <wc-pagination-item>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-pagination-link": {
    "title": "<wc-pagination-link>",
    "tagline": "Documentation for <wc-pagination-link>",
    "attributes": [
      {
        "name": "`href` / `href`",
        "type": "`string`",
        "default": "``",
        "description": "Turns the component into a navigational link pointing to the provided URL."
      },
      {
        "name": "`target` / `target`",
        "type": "`string`",
        "default": "``",
        "description": "Forwarded to the underlying link target when `href` is set."
      },
      {
        "name": "`rel` / `rel`",
        "type": "`string`",
        "default": "``",
        "description": "Relationship metadata for anchored buttons or links."
      },
      {
        "name": "`download` / `download`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `download` setting."
      },
      {
        "name": "`aria-label` / `ariaLabel`",
        "type": "",
        "default": "—",
        "description": "Accessible label forwarded to the underlying control."
      },
      {
        "name": "`aria-current` / `ariaCurrent`",
        "type": "",
        "default": "—",
        "description": "Forwards the corresponding ARIA attribute for accessibility."
      },
      {
        "name": "`current` / `current`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Configures the `current` setting."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [
      {
        "name": "`wc-pagination-activate`",
        "detail": "`{ source, value: this.value || null, href: this.#anchor.getAttribute('href'), current: this.current, disabled: this.disabled, originalEvent, }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--wc-pagination-active-background",
      "--wc-pagination-active-border-color",
      "--wc-pagination-active-color",
      "--wc-pagination-background",
      "--wc-pagination-border-color",
      "--wc-pagination-color",
      "--wc-pagination-disabled-background",
      "--wc-pagination-disabled-border-color",
      "--wc-pagination-disabled-color",
      "--wc-pagination-disabled-opacity",
      "--wc-pagination-focus-ring",
      "--wc-pagination-font-size",
      "--wc-pagination-font-weight",
      "--wc-pagination-height",
      "--wc-pagination-hover-background",
      "--wc-pagination-hover-border-color",
      "--wc-pagination-hover-color",
      "--wc-pagination-letter-spacing",
      "--wc-pagination-link-gap",
      "--wc-pagination-min-width",
      "--wc-pagination-padding-block",
      "--wc-pagination-padding-inline",
      "--wc-pagination-radius"
    ]
  },
  "wc-pagination-previous": {
    "title": "<wc-pagination-previous>",
    "tagline": "Documentation for <wc-pagination-previous>",
    "attributes": [
      {
        "name": "`...super.observedAttributes` / `...super.observedAttributes`",
        "type": "",
        "default": "—",
        "description": "Configures the `...super.observedAttributes` setting."
      },
      {
        "name": "`label` / `label`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `label` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-pagination-next": {
    "title": "<wc-pagination-next>",
    "tagline": "Documentation for <wc-pagination-next>",
    "attributes": [
      {
        "name": "`...super.observedAttributes` / `...super.observedAttributes`",
        "type": "",
        "default": "—",
        "description": "Configures the `...super.observedAttributes` setting."
      },
      {
        "name": "`label` / `label`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `label` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-pagination-ellipsis": {
    "title": "<wc-pagination-ellipsis>",
    "tagline": "Documentation for <wc-pagination-ellipsis>",
    "attributes": [
      {
        "name": "`label` / `label`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `label` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-pagination-border-color",
      "--wc-pagination-ellipsis-background",
      "--wc-pagination-ellipsis-color",
      "--wc-pagination-font-size",
      "--wc-pagination-font-weight",
      "--wc-pagination-height",
      "--wc-pagination-min-width",
      "--wc-pagination-padding-block",
      "--wc-pagination-padding-inline",
      "--wc-pagination-radius"
    ]
  },
  "wc-password-toggle-field": {
    "title": "<wc-password-toggle-field>",
    "tagline": "Documentation for <wc-password-toggle-field>",
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "``",
        "description": "Currently selected value."
      },
      {
        "name": "`placeholder` / `placeholder`",
        "type": "",
        "default": "—",
        "description": "Hint text displayed when no value is provided."
      },
      {
        "name": "`name` / `name`",
        "type": "",
        "default": "—",
        "description": "Name used when participating in forms or for identification."
      },
      {
        "name": "`autocomplete` / `autocomplete`",
        "type": "",
        "default": "—",
        "description": "Native autocomplete hint forwarded to the input."
      },
      {
        "name": "`autofocus` / `autofocus`",
        "type": "",
        "default": "—",
        "description": "Focuses the control automatically when it connects."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`required` / `required`",
        "type": "",
        "default": "—",
        "description": "Marks the control as required for form submission."
      },
      {
        "name": "`minlength` / `minlength`",
        "type": "",
        "default": "—",
        "description": "Minimum number of characters required."
      },
      {
        "name": "`maxlength` / `maxlength`",
        "type": "",
        "default": "—",
        "description": "Upper bound on input character length."
      },
      {
        "name": "`pattern` / `pattern`",
        "type": "",
        "default": "—",
        "description": "Validation pattern applied to the input."
      },
      {
        "name": "`inputmode` / `inputmode`",
        "type": "",
        "default": "—",
        "description": "Input mode hint for virtual keyboards."
      },
      {
        "name": "`label` / `label`",
        "type": "",
        "default": "—",
        "description": "Configures the `label` setting."
      },
      {
        "name": "`show-label` / `showLabel`",
        "type": "",
        "default": "—",
        "description": "Toggle label visibility for icon-only variants."
      },
      {
        "name": "`hide-label` / `hideLabel`",
        "type": "",
        "default": "—",
        "description": "Visually hides the label while keeping it accessible."
      },
      {
        "name": "`visible` / `visible`",
        "type": "`boolean`",
        "default": "—",
        "description": "Controls whether the surface is currently shown."
      },
      {
        "name": "`default-visible` / `defaultVisible`",
        "type": "",
        "default": "—",
        "description": "Shows the overlay on first render."
      }
    ],
    "events": [
      {
        "name": "`visibilitychange`",
        "detail": "`{ visible: this.#visible }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--wc-password-field-background",
      "--wc-password-field-border",
      "--wc-password-field-border-focus",
      "--wc-password-field-border-hover",
      "--wc-password-field-color",
      "--wc-password-field-gap",
      "--wc-password-field-height",
      "--wc-password-field-placeholder",
      "--wc-password-field-radius",
      "--wc-password-field-shadow-focus",
      "--wc-password-field-toggle-background",
      "--wc-password-field-toggle-background-hover",
      "--wc-password-field-toggle-color",
      "--wc-password-field-toggle-color-active",
      "--wc-password-field-toggle-size"
    ]
  },
  "wc-popover": {
    "title": "<wc-popover>",
    "tagline": "Documentation for <wc-popover>",
    "usage": {
      "snippet": "<wc-popover side=\"bottom\" align=\"center\">\n  <button slot=\"trigger\" type=\"button\">Open settings</button>\n  <div slot=\"content\">\n    <h3>Settings</h3>\n    <p>Adjust preferences directly inside the popover.</p>\n    <button data-popover-close type=\"button\">Done</button>\n  </div>\n</wc-popover>"
    },
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`boolean`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      },
      {
        "name": "`default-open` / `defaultOpen`",
        "type": "",
        "default": "—",
        "description": "Expands the element the first time it renders."
      },
      {
        "name": "`modal` / `modal`",
        "type": "`boolean`",
        "default": "—",
        "description": "Treats the component as a modal surface that traps focus."
      },
      {
        "name": "`side` / `side`",
        "type": "",
        "default": "—",
        "description": "Preferred side for popover-like placements."
      },
      {
        "name": "`align` / `align`",
        "type": "",
        "default": "—",
        "description": "Alignment within the chosen side."
      },
      {
        "name": "`side-offset` / `sideOffset`",
        "type": "",
        "default": "—",
        "description": "Offset distance between trigger and surface."
      },
      {
        "name": "`align-offset` / `alignOffset`",
        "type": "",
        "default": "—",
        "description": "Pixel adjustment applied after alignment."
      },
      {
        "name": "`collision-padding` / `collisionPadding`",
        "type": "",
        "default": "—",
        "description": "Padding used when auto-correcting overlay position."
      },
      {
        "name": "`avoid-collisions` / `avoidCollisions`",
        "type": "",
        "default": "—",
        "description": "Prevents overlay placement from intersecting viewport edges."
      },
      {
        "name": "`hide-arrow` / `hideArrow`",
        "type": "",
        "default": "—",
        "description": "Hides decorative arrows from overlay surfaces."
      },
      {
        "name": "`close-on-escape` / `closeOnEscape`",
        "type": "",
        "default": "—",
        "description": "Closes the overlay when Escape is pressed."
      },
      {
        "name": "`close-on-interact-outside` / `closeOnInteractOutside`",
        "type": "",
        "default": "—",
        "description": "Closes when pointer or focus occurs outside the surface."
      }
    ],
    "events": [
      {
        "name": "`wc-popover-open`",
        "detail": "",
        "description": "Emitted event."
      },
      {
        "name": "`wc-popover-close`",
        "detail": "",
        "description": "Emitted event."
      }
    ],
    "slots": [
      {
        "name": "`trigger`",
        "description": ""
      }
    ],
    "css": [
      "--popover-arrow-border",
      "--popover-arrow-offset",
      "--popover-arrow-shadow",
      "--popover-arrow-size",
      "--popover-border",
      "--popover-color",
      "--popover-gap",
      "--popover-padding",
      "--popover-radius",
      "--popover-shadow",
      "--popover-surface",
      "--popover-transition-duration",
      "--popover-transition-easing",
      "--popover-trigger-cursor",
      "--popover-trigger-focus-outline",
      "--popover-trigger-focus-outline-offset",
      "--popover-z-index",
      "--wc-popover-arrow-offset",
      "--wc-popover-arrow-size",
      "--wc-popover-border",
      "--wc-popover-collision-padding",
      "--wc-popover-color",
      "--wc-popover-content-available-height",
      "--wc-popover-content-available-width",
      "--wc-popover-gap",
      "--wc-popover-padding",
      "--wc-popover-radius",
      "--wc-popover-shadow",
      "--wc-popover-surface",
      "--wc-popover-transform-origin",
      "--wc-popover-transition-duration",
      "--wc-popover-transition-easing",
      "--wc-popover-trigger-height",
      "--wc-popover-trigger-width",
      "--wc-popover-z-index"
    ]
  },
  "wc-pricing-card": {
    "title": "<wc-pricing-card>",
    "tagline": "Documentation for <wc-pricing-card>",
    "attributes": [
      {
        "name": "`plan` / `plan`",
        "type": "`string`",
        "default": "`\"Scale\"`",
        "description": "Pricing plan identifier used by pricing cards."
      },
      {
        "name": "`price` / `price`",
        "type": "`string`",
        "default": "`\"$49\"`",
        "description": "Primary price string displayed by pricing cards."
      },
      {
        "name": "`period` / `period`",
        "type": "`string`",
        "default": "`\"/month\"`",
        "description": "Which date period should be highlighted or computed."
      },
      {
        "name": "`cta-label` / `ctaLabel`",
        "type": "`string`",
        "default": "`\"Start free trial\"`",
        "description": "Label text for call-to-action buttons."
      },
      {
        "name": "`href` / `href`",
        "type": "`string`",
        "default": "`\"#\"`",
        "description": "Turns the component into a navigational link pointing to the provided URL."
      },
      {
        "name": "`recommended` / `recommended`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Highlights the pricing card as recommended."
      },
      {
        "name": "`badge-label` / `badgeLabel`",
        "type": "`string`",
        "default": "`\"Recommended\"`",
        "description": "Accessible label describing the badge count."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-pricing-card-accent",
      "--wc-pricing-card-background",
      "--wc-pricing-card-border",
      "--wc-pricing-card-feature-icon",
      "--wc-pricing-card-foreground",
      "--wc-pricing-card-muted",
      "--wc-pricing-card-radius",
      "--wc-pricing-card-shadow"
    ]
  },
  "wc-progress": {
    "title": "<wc-progress>",
    "tagline": "Documentation for <wc-progress>",
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Currently selected value."
      },
      {
        "name": "`max` / `max`",
        "type": "`number`",
        "default": "—",
        "description": "Upper bound for numeric or date ranges."
      },
      {
        "name": "`label` / `label`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `label` setting."
      },
      {
        "name": "`value-text` / `valueText`",
        "type": "`string`",
        "default": "``",
        "description": "Accessible text alternative describing the current value."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--progress-background",
      "--progress-complete-duration",
      "--progress-height",
      "--progress-indeterminate-duration",
      "--progress-indeterminate-easing",
      "--progress-indeterminate-width",
      "--progress-indicator-background",
      "--progress-indicator-foreground",
      "--progress-min-width",
      "--progress-percent",
      "--progress-radius",
      "--progress-ratio",
      "--progress-transition-duration",
      "--progress-transition-timing",
      "--progress-width"
    ]
  },
  "qr-code": {
    "title": "<qr-code>",
    "tagline": "Documentation for <qr-code>",
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "``",
        "description": "Currently selected value."
      },
      {
        "name": "`size` / `size`",
        "type": "`number`",
        "default": "—",
        "description": "Adjusts spacing, padding, or icon sizing presets."
      },
      {
        "name": "`quiet-zone` / `quietZone`",
        "type": "`number`",
        "default": "—",
        "description": "Configures the `quiet-zone` setting."
      },
      {
        "name": "`error-correction` / `errorCorrection`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `error-correction` setting."
      }
    ],
    "events": [
      {
        "name": "`qr-code-error`",
        "detail": "",
        "description": "Emitted event."
      }
    ],
    "slots": [],
    "css": [
      "--qr-background",
      "--qr-foreground",
      "--qr-size"
    ]
  },
  "wc-radio-group": {
    "title": "<wc-radio-group>",
    "tagline": "Documentation for <wc-radio-group>",
    "usage": {
      "snippet": "<wc-radio-group name=\"density\" default-value=\"comfortable\">\n  <wc-radio-group-item value=\"default\">Default</wc-radio-group-item>\n  <wc-radio-group-item value=\"comfortable\">Comfortable</wc-radio-group-item>\n  <wc-radio-group-item value=\"compact\">Compact</wc-radio-group-item>\n</wc-radio-group>"
    },
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`default-value` / `defaultValue`",
        "type": "`string`",
        "default": "—",
        "description": "Initial value before user interaction."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`required` / `required`",
        "type": "`boolean`",
        "default": "—",
        "description": "Marks the control as required for form submission."
      },
      {
        "name": "`orientation` / `orientation`",
        "type": "`string`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      },
      {
        "name": "`name` / `name`",
        "type": "`string`",
        "default": "``",
        "description": "Name used when participating in forms or for identification."
      },
      {
        "name": "`loop` / `loop`",
        "type": "`boolean`",
        "default": "—",
        "description": "Repeats playback when media reaches the end."
      }
    ],
    "events": [
      {
        "name": "`wc-radio-group-value-change`",
        "detail": "",
        "description": "Emitted event."
      }
    ],
    "slots": [],
    "css": [
      "--wc-radio-group-direction",
      "--wc-radio-group-gap"
    ]
  },
  "wc-radio-group-item": {
    "title": "<wc-radio-group-item>",
    "tagline": "Documentation for <wc-radio-group-item>",
    "usage": {
      "snippet": "<wc-radio-group name=\"density\" default-value=\"comfortable\">\n  <wc-radio-group-item value=\"default\">Default</wc-radio-group-item>\n  <wc-radio-group-item value=\"comfortable\">Comfortable</wc-radio-group-item>\n  <wc-radio-group-item value=\"compact\">Compact</wc-radio-group-item>\n</wc-radio-group>"
    },
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-radio-item-background",
      "--wc-radio-item-background-hover",
      "--wc-radio-item-border",
      "--wc-radio-item-focus-ring",
      "--wc-radio-item-gap",
      "--wc-radio-item-indicator-color",
      "--wc-radio-item-indicator-size",
      "--wc-radio-item-label-color",
      "--wc-radio-item-radius",
      "--wc-radio-item-shadow",
      "--wc-radio-item-size"
    ]
  },
  "wc-resizable-panel": {
    "title": "<wc-resizable-panel>",
    "tagline": "Documentation for <wc-resizable-panel>",
    "attributes": [
      {
        "name": "`default-size` / `defaultSize`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `default-size` setting."
      },
      {
        "name": "`min-size` / `minSize`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `min-size` setting."
      },
      {
        "name": "`max-size` / `maxSize`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `max-size` setting."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`string`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-resizable-panel-background",
      "--wc-resizable-panel-border",
      "--wc-resizable-panel-color",
      "--wc-resizable-panel-disabled-opacity",
      "--wc-resizable-panel-padding",
      "--wc-resizable-panel-size"
    ]
  },
  "wc-resizable-handle": {
    "title": "<wc-resizable-handle>",
    "tagline": "Documentation for <wc-resizable-handle>",
    "attributes": [
      {
        "name": "`with-handle` / `withHandle`",
        "type": "",
        "default": "—",
        "description": "Configures the `with-handle` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-resizable-grip-height",
      "--wc-resizable-grip-width",
      "--wc-resizable-handle-active-color",
      "--wc-resizable-handle-color",
      "--wc-resizable-handle-hit-area",
      "--wc-resizable-handle-hover-color",
      "--wc-resizable-handle-size"
    ]
  },
  "wc-resizable-group": {
    "title": "<wc-resizable-group>",
    "tagline": "Documentation for <wc-resizable-group>",
    "attributes": [
      {
        "name": "`direction` / `direction`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `direction` setting."
      }
    ],
    "events": [
      {
        "name": "`wc-resize`",
        "detail": "`{ orientation: this.#orientation, previous, next, sizes: [previous.size, next.size] }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--wc-resizable-background",
      "--wc-resizable-border",
      "--wc-resizable-border-color",
      "--wc-resizable-border-radius",
      "--wc-resizable-gap"
    ]
  },
  "wc-scroll-area": {
    "title": "<wc-scroll-area>",
    "tagline": "Documentation for <wc-scroll-area>",
    "usage": {
      "snippet": "<wc-scroll-area style=\"inline-size: 240px; block-size: 260px;\">\n  <div style=\"display: grid; gap: 0.75rem;\">\n    <strong>Tags</strong>\n    <span>v1.2.0-beta.50</span>\n    <span>v1.2.0-beta.49</span>\n    <!-- … -->\n  </div>\n</wc-scroll-area>"
    },
    "attributes": [
      {
        "name": "`type` / `type`",
        "type": "`\"hover\" | \"scroll\" | \"always\"`",
        "default": "—",
        "description": "Sets the underlying control type or behaviour preset."
      },
      {
        "name": "`scroll-hide-delay` / `scrollHideDelay`",
        "type": "`number`",
        "default": "—",
        "description": "Configures the `scroll-hide-delay` setting."
      },
      {
        "name": "`dir` / `dir`",
        "type": "",
        "default": "—",
        "description": "Directional text context (ltr or rtl)."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--scroll-area-background",
      "--scroll-area-border",
      "--scroll-area-radius",
      "--scroll-area-scrollbar-background",
      "--scroll-area-scrollbar-background-hover",
      "--scroll-area-scrollbar-girth",
      "--scroll-area-scrollbar-padding",
      "--scroll-area-scrollbar-transition-duration",
      "--scroll-area-thumb-background",
      "--scroll-area-thumb-background-hover",
      "--scroll-area-thumb-min-size",
      "--scroll-area-thumb-radius"
    ]
  },
  "wc-select-option": {
    "title": "<wc-select-option>",
    "tagline": "Documentation for <wc-select-option>",
    "attributes": [
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--option-background",
      "--option-color",
      "--option-disabled-color",
      "--option-highlighted-background",
      "--option-highlighted-color",
      "--option-indicator-color",
      "--option-padding",
      "--option-radius",
      "--wc-select-option-background",
      "--wc-select-option-color",
      "--wc-select-option-disabled-color",
      "--wc-select-option-highlighted-background",
      "--wc-select-option-highlighted-color",
      "--wc-select-option-indicator-color",
      "--wc-select-option-padding",
      "--wc-select-option-radius"
    ]
  },
  "wc-select-group": {
    "title": "<wc-select-group>",
    "tagline": "Documentation for <wc-select-group>",
    "attributes": [
      {
        "name": "`label` / `label`",
        "type": "",
        "default": "—",
        "description": "Configures the `label` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-select-group-label-color"
    ]
  },
  "wc-select-separator": {
    "title": "<wc-select-separator>",
    "tagline": "Documentation for <wc-select-separator>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--wc-select-separator-color"
    ]
  },
  "wc-select": {
    "title": "<wc-select>",
    "tagline": "Documentation for <wc-select>",
    "attributes": [
      {
        "name": "`placeholder` / `placeholder`",
        "type": "`string`",
        "default": "`\"Select an option\"`",
        "description": "Hint text displayed when no value is provided."
      },
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "``",
        "description": "Currently selected value."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [
      {
        "name": "`wc-select-toggle`",
        "detail": "`{ open: false }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-select-change`",
        "detail": "`{ value: this.value, option }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--wc-select-content-background",
      "--wc-select-content-border",
      "--wc-select-content-radius",
      "--wc-select-content-shadow",
      "--wc-select-icon-color",
      "--wc-select-trigger-background",
      "--wc-select-trigger-border",
      "--wc-select-trigger-color",
      "--wc-select-trigger-focus-ring",
      "--wc-select-trigger-height",
      "--wc-select-trigger-padding",
      "--wc-select-trigger-placeholder",
      "--wc-select-trigger-radius",
      "--wc-select-trigger-shadow",
      "--wc-select-viewport-max-height",
      "--wc-select-viewport-padding"
    ]
  },
  "wc-separator": {
    "title": "<wc-separator>",
    "tagline": "Documentation for <wc-separator>",
    "usage": {
      "snippet": "<wc-separator orientation=\"vertical\"></wc-separator>"
    },
    "attributes": [
      {
        "name": "`orientation` / `orientation`",
        "type": "`Orientation`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      },
      {
        "name": "`decorative` / `decorative`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Configures the `decorative` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--separator-color",
      "--separator-length",
      "--separator-margin",
      "--separator-radius",
      "--separator-thickness"
    ]
  },
  "wc-sidebar-provider": {
    "title": "<wc-sidebar-provider>",
    "tagline": "Documentation for <wc-sidebar-provider>",
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`string`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      }
    ],
    "events": [
      {
        "name": "`wc-sidebar-device-change`",
        "detail": "`{ isMobile: this.#isMobile }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-sidebar-open-change`",
        "detail": "`{ open: this.#open, isMobile: this.#isMobile }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--layout-background",
      "--sidebar-collapsed-width",
      "--sidebar-width",
      "--sidebar-width-mobile",
      "--wc-sidebar-collapsed-width",
      "--wc-sidebar-gap",
      "--wc-sidebar-overlay-background",
      "--wc-sidebar-overlay-opacity",
      "--wc-sidebar-transition-duration",
      "--wc-sidebar-transition-easing",
      "--wc-sidebar-width",
      "--wc-sidebar-width-mobile"
    ]
  },
  "wc-sidebar": {
    "title": "<wc-sidebar>",
    "tagline": "Documentation for <wc-sidebar>",
    "attributes": [
      {
        "name": "`variant` / `variant`",
        "type": "",
        "default": "—",
        "description": "Selects the visual variant or tone for the surface."
      },
      {
        "name": "`collapsible` / `collapsible`",
        "type": "",
        "default": "—",
        "description": "Allows the open item to be collapsed via repeated activation."
      },
      {
        "name": "`side` / `side`",
        "type": "",
        "default": "—",
        "description": "Preferred side for popover-like placements."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar",
      "--sidebar-border",
      "--sidebar-collapsed-width",
      "--sidebar-foreground",
      "--sidebar-gap",
      "--sidebar-padding",
      "--sidebar-radius",
      "--sidebar-ring",
      "--sidebar-width",
      "--sidebar-width-mobile",
      "--wc-sidebar-background",
      "--wc-sidebar-border-color",
      "--wc-sidebar-current-translate",
      "--wc-sidebar-current-width",
      "--wc-sidebar-foreground",
      "--wc-sidebar-gap",
      "--wc-sidebar-gap-collapsed",
      "--wc-sidebar-padding",
      "--wc-sidebar-padding-collapsed",
      "--wc-sidebar-radius",
      "--wc-sidebar-ring",
      "--wc-sidebar-shadow",
      "--wc-sidebar-transition-duration",
      "--wc-sidebar-transition-easing"
    ]
  },
  "wc-sidebar-inset": {
    "title": "<wc-sidebar-inset>",
    "tagline": "Documentation for <wc-sidebar-inset>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-inset-background",
      "--sidebar-inset-content-gap",
      "--sidebar-inset-gap",
      "--sidebar-inset-padding",
      "--sidebar-inset-padding-collapsed",
      "--wc-sidebar-transition-duration",
      "--wc-sidebar-transition-easing"
    ]
  },
  "wc-sidebar-trigger": {
    "title": "<wc-sidebar-trigger>",
    "tagline": "Documentation for <wc-sidebar-trigger>",
    "attributes": [
      {
        "name": "`label` / `label`",
        "type": "",
        "default": "—",
        "description": "Configures the `label` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-trigger-background",
      "--sidebar-trigger-background-hover",
      "--sidebar-trigger-color",
      "--sidebar-trigger-radius",
      "--sidebar-trigger-ring",
      "--sidebar-trigger-size",
      "--wc-sidebar-ring",
      "--wc-sidebar-transition-duration",
      "--wc-sidebar-transition-easing"
    ]
  },
  "wc-sidebar-header": {
    "title": "<wc-sidebar-header>",
    "tagline": "Documentation for <wc-sidebar-header>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-header-border",
      "--sidebar-header-gap",
      "--sidebar-header-margin",
      "--sidebar-header-margin-collapsed",
      "--sidebar-header-padding",
      "--sidebar-header-padding-collapsed"
    ]
  },
  "wc-sidebar-footer": {
    "title": "<wc-sidebar-footer>",
    "tagline": "Documentation for <wc-sidebar-footer>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-footer-border",
      "--sidebar-footer-gap",
      "--sidebar-footer-margin",
      "--sidebar-footer-padding"
    ]
  },
  "wc-sidebar-content": {
    "title": "<wc-sidebar-content>",
    "tagline": "Documentation for <wc-sidebar-content>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-content-gap"
    ]
  },
  "wc-sidebar-group": {
    "title": "<wc-sidebar-group>",
    "tagline": "Documentation for <wc-sidebar-group>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-group-background",
      "--sidebar-group-background-collapsed",
      "--sidebar-group-content-gap",
      "--sidebar-group-content-gap-collapsed",
      "--sidebar-group-gap",
      "--sidebar-group-gap-collapsed",
      "--sidebar-group-label-color",
      "--sidebar-group-label-size",
      "--sidebar-group-label-transform",
      "--sidebar-group-label-weight",
      "--sidebar-group-padding",
      "--sidebar-group-padding-collapsed",
      "--sidebar-group-radius"
    ]
  },
  "wc-sidebar-group-label": {
    "title": "<wc-sidebar-group-label>",
    "tagline": "Documentation for <wc-sidebar-group-label>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-group-label-padding"
    ]
  },
  "wc-sidebar-group-action": {
    "title": "<wc-sidebar-group-action>",
    "tagline": "Documentation for <wc-sidebar-group-action>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-group-action-background-hover",
      "--sidebar-group-action-color",
      "--sidebar-group-action-padding",
      "--sidebar-group-action-radius",
      "--sidebar-group-action-ring",
      "--wc-sidebar-ring",
      "--wc-sidebar-transition-duration",
      "--wc-sidebar-transition-easing"
    ]
  },
  "wc-sidebar-group-content": {
    "title": "<wc-sidebar-group-content>",
    "tagline": "Documentation for <wc-sidebar-group-content>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-group-content-gap"
    ]
  },
  "wc-sidebar-menu": {
    "title": "<wc-sidebar-menu>",
    "tagline": "Documentation for <wc-sidebar-menu>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-menu-gap",
      "--sidebar-menu-gap-collapsed"
    ]
  },
  "wc-sidebar-menu-item": {
    "title": "<wc-sidebar-menu-item>",
    "tagline": "Documentation for <wc-sidebar-menu-item>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-sidebar-menu-button": {
    "title": "<wc-sidebar-menu-button>",
    "tagline": "Documentation for <wc-sidebar-menu-button>",
    "attributes": [
      {
        "name": "`href` / `href`",
        "type": "",
        "default": "—",
        "description": "Turns the component into a navigational link pointing to the provided URL."
      },
      {
        "name": "`active` / `active`",
        "type": "",
        "default": "—",
        "description": "Configures the `active` setting."
      },
      {
        "name": "`target` / `target`",
        "type": "",
        "default": "—",
        "description": "Forwarded to the underlying link target when `href` is set."
      },
      {
        "name": "`rel` / `rel`",
        "type": "",
        "default": "—",
        "description": "Relationship metadata for anchored buttons or links."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-menu-button-background-active",
      "--sidebar-menu-button-background-hover",
      "--sidebar-menu-button-color-active",
      "--sidebar-menu-button-gap",
      "--sidebar-menu-button-padding",
      "--sidebar-menu-button-padding-collapsed",
      "--sidebar-menu-button-radius",
      "--sidebar-menu-button-ring",
      "--wc-sidebar-ring",
      "--wc-sidebar-transition-duration",
      "--wc-sidebar-transition-easing"
    ]
  },
  "wc-sidebar-menu-action": {
    "title": "<wc-sidebar-menu-action>",
    "tagline": "Documentation for <wc-sidebar-menu-action>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-menu-action-background-hover",
      "--sidebar-menu-action-color",
      "--sidebar-menu-action-color-hover",
      "--sidebar-menu-action-padding",
      "--sidebar-menu-action-radius",
      "--sidebar-menu-action-ring",
      "--wc-sidebar-ring",
      "--wc-sidebar-transition-duration",
      "--wc-sidebar-transition-easing"
    ]
  },
  "wc-sidebar-menu-badge": {
    "title": "<wc-sidebar-menu-badge>",
    "tagline": "Documentation for <wc-sidebar-menu-badge>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-menu-badge-background",
      "--sidebar-menu-badge-color"
    ]
  },
  "wc-sidebar-menu-sub": {
    "title": "<wc-sidebar-menu-sub>",
    "tagline": "Documentation for <wc-sidebar-menu-sub>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-menu-sub-gap",
      "--sidebar-menu-sub-margin"
    ]
  },
  "wc-sidebar-menu-sub-item": {
    "title": "<wc-sidebar-menu-sub-item>",
    "tagline": "Documentation for <wc-sidebar-menu-sub-item>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-sidebar-menu-sub-button": {
    "title": "<wc-sidebar-menu-sub-button>",
    "tagline": "Documentation for <wc-sidebar-menu-sub-button>",
    "attributes": [
      {
        "name": "`href` / `href`",
        "type": "",
        "default": "—",
        "description": "Turns the component into a navigational link pointing to the provided URL."
      },
      {
        "name": "`active` / `active`",
        "type": "",
        "default": "—",
        "description": "Configures the `active` setting."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-menu-sub-button-background-active",
      "--sidebar-menu-sub-button-background-hover",
      "--sidebar-menu-sub-button-padding",
      "--sidebar-menu-sub-button-radius",
      "--sidebar-menu-sub-button-ring",
      "--wc-sidebar-ring",
      "--wc-sidebar-transition-duration",
      "--wc-sidebar-transition-easing"
    ]
  },
  "wc-sidebar-menu-skeleton": {
    "title": "<wc-sidebar-menu-skeleton>",
    "tagline": "Documentation for <wc-sidebar-menu-skeleton>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-menu-button-padding",
      "--sidebar-menu-button-radius"
    ]
  },
  "wc-sidebar-separator": {
    "title": "<wc-sidebar-separator>",
    "tagline": "Documentation for <wc-sidebar-separator>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-separator-color",
      "--sidebar-separator-margin"
    ]
  },
  "wc-sidebar-rail": {
    "title": "<wc-sidebar-rail>",
    "tagline": "Documentation for <wc-sidebar-rail>",
    "attributes": [],
    "events": [],
    "slots": [],
    "css": [
      "--sidebar-rail-background",
      "--sidebar-rail-background-hover",
      "--sidebar-rail-ring",
      "--wc-sidebar-ring"
    ]
  },
  "wc-skeleton": {
    "title": "<wc-skeleton>",
    "tagline": "Documentation for <wc-skeleton>",
    "usage": {
      "snippet": "<wc-skeleton style=\"--wc-skeleton-width: 12rem;\"></wc-skeleton>"
    },
    "attributes": [
      {
        "name": "`still` / `still`",
        "type": "",
        "default": "—",
        "description": "URL for the static preview image."
      }
    ],
    "events": [],
    "slots": [],
    "css": []
  },
  "wc-slider": {
    "title": "<wc-slider>",
    "tagline": "Documentation for <wc-slider>",
    "usage": {
      "snippet": "<wc-slider value=\"25 75\" min=\"0\" max=\"100\" step=\"5\"></wc-slider>"
    },
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`number[]`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`min` / `min`",
        "type": "`number`",
        "default": "—",
        "description": "Lower bound for numeric or date ranges."
      },
      {
        "name": "`max` / `max`",
        "type": "`number`",
        "default": "—",
        "description": "Upper bound for numeric or date ranges."
      },
      {
        "name": "`step` / `step`",
        "type": "`number`",
        "default": "—",
        "description": "Increment step applied when adjusting numeric values."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`orientation` / `orientation`",
        "type": "`'horizontal' | 'vertical'`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      },
      {
        "name": "`inverted` / `inverted`",
        "type": "`boolean`",
        "default": "—",
        "description": "Switches to an inverted color scheme."
      },
      {
        "name": "`dir` / `dir`",
        "type": "",
        "default": "—",
        "description": "Directional text context (ltr or rtl)."
      },
      {
        "name": "`name` / `name`",
        "type": "",
        "default": "—",
        "description": "Name used when participating in forms or for identification."
      },
      {
        "name": "`min-steps-between-thumbs` / `minStepsBetweenThumbs`",
        "type": "",
        "default": "—",
        "description": "Minimum distance allowed between range slider thumbs."
      },
      {
        "name": "`thumb-labels` / `thumbLabels`",
        "type": "",
        "default": "—",
        "description": "Shows value labels above slider thumbs."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-slider-gap",
      "--wc-slider-height",
      "--wc-slider-range-background",
      "--wc-slider-thumb-background",
      "--wc-slider-thumb-focus-outline",
      "--wc-slider-thumb-radius",
      "--wc-slider-thumb-shadow",
      "--wc-slider-thumb-size",
      "--wc-slider-track-background",
      "--wc-slider-track-radius",
      "--wc-slider-track-size",
      "--wc-slider-width"
    ]
  },
  "wc-spinner": {
    "title": "<wc-spinner>",
    "tagline": "Documentation for <wc-spinner>",
    "usage": {
      "snippet": "<wc-spinner label=\"Fetching data\"></wc-spinner>"
    },
    "attributes": [
      {
        "name": "`label` / `label`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `label` setting."
      },
      {
        "name": "`aria-label` / `ariaLabel`",
        "type": "",
        "default": "—",
        "description": "Accessible label forwarded to the underlying control."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--wc-spinner-color",
      "--wc-spinner-duration",
      "--wc-spinner-gap",
      "--wc-spinner-size",
      "--wc-spinner-stroke-width",
      "--wc-spinner-track-color"
    ]
  },
  "wc-sonner": {
    "title": "<wc-sonner>",
    "tagline": "Documentation for <wc-sonner>",
    "usage": {
      "snippet": "<wc-sonner id=\"toaster\"></wc-sonner>\n<script type=\"module\">\n  const toaster = document.getElementById('toaster');\n  toaster.toast.success('Saved changes');\n</script>"
    },
    "attributes": [
      {
        "name": "`position` / `position`",
        "type": "`'top-left' | 'top-right' | 'top-center' | 'bottom-left' | 'bottom-right' | 'bottom-center'`",
        "default": "`'top-right'`",
        "description": "Anchors the toast viewport to a screen edge."
      },
      {
        "name": "`duration` / `duration`",
        "type": "`number`",
        "default": "`4000`",
        "description": "Default timeout for automatically dismissing toasts (ms)."
      },
      {
        "name": "`close-on-click` / `closeOnClick`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Dismiss the toast when its surface is clicked."
      }
    ],
    "events": [
      {
        "name": "`wc-sonner-open`",
        "detail": "`{ id, record }`",
        "description": "Fires when a toast is enqueued."
      },
      {
        "name": "`wc-sonner-action`",
        "detail": "`{ id, record }`",
        "description": "Dispatched after an action button runs."
      },
      {
        "name": "`wc-sonner-dismiss`",
        "detail": "`{ id, record, reason }`",
        "description": "Emitted when a toast leaves the viewport."
      }
    ],
    "slots": [],
    "css": [
      "--sonner-z-index",
      "--sonner-gap",
      "--sonner-max-width",
      "--sonner-radius",
      "--sonner-font-family",
      "--sonner-color",
      "--sonner-background",
      "--sonner-border",
      "--sonner-shadow",
      "--sonner-success",
      "--sonner-info",
      "--sonner-warning",
      "--sonner-error",
      "--sonner-loading"
    ],
    "notes": [
      "Provides Sonner-style helpers such as `toast.success`, `toast.error`, and `toast.promise`.",
      "Supports imperative dismissal via `toast.dismiss(id?)`.",
      "Action buttons emit `wc-sonner-action` events after running the provided callback.",
      "Styling hooks exposed via ::part(viewport|toast|icon|body|title|description|actions|action-button|close-button)."
    ]
  },
  "wc-switch": {
    "title": "<wc-switch>",
    "tagline": "Documentation for <wc-switch>",
    "usage": {
      "snippet": "<wc-switch checked>Airplane mode</wc-switch>"
    },
    "attributes": [
      {
        "name": "`checked` / `checked`",
        "type": "`boolean`",
        "default": "—",
        "description": "Marks the control as checked."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`required` / `required`",
        "type": "`boolean`",
        "default": "—",
        "description": "Marks the control as required for form submission."
      },
      {
        "name": "`name` / `name`",
        "type": "`string`",
        "default": "—",
        "description": "Name used when participating in forms or for identification."
      },
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--switch-focus-ring",
      "--switch-gap",
      "--switch-height",
      "--switch-label-color",
      "--switch-padding",
      "--switch-radius",
      "--switch-thumb-background",
      "--switch-thumb-shadow",
      "--switch-thumb-size",
      "--switch-track-background",
      "--switch-track-background-checked",
      "--switch-width"
    ]
  },
  "wc-tab": {
    "title": "<wc-tab>",
    "tagline": "Documentation for <wc-tab>",
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`string`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      }
    ],
    "events": [
      {
        "name": "`wc-tab-focus`",
        "detail": "`{ value: this.value }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-tab-activate`",
        "detail": "`{ value: this.value, origin }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--tab-background",
      "--tab-background-active",
      "--tab-background-hover",
      "--tab-color",
      "--tab-color-active",
      "--tab-focus-ring",
      "--tab-font-size",
      "--tab-font-weight",
      "--tab-padding",
      "--tab-radius",
      "--tabs-trigger-active-color",
      "--tabs-trigger-active-shadow",
      "--tabs-trigger-background",
      "--tabs-trigger-background-active",
      "--tabs-trigger-background-hover",
      "--tabs-trigger-color",
      "--tabs-trigger-focus-ring",
      "--tabs-trigger-font-size",
      "--tabs-trigger-font-weight",
      "--tabs-trigger-gap",
      "--tabs-trigger-padding",
      "--tabs-trigger-radius"
    ]
  },
  "wc-tablist": {
    "title": "<wc-tablist>",
    "tagline": "Documentation for <wc-tablist>",
    "attributes": [
      {
        "name": "`aria-label` / `ariaLabel`",
        "type": "",
        "default": "—",
        "description": "Accessible label forwarded to the underlying control."
      },
      {
        "name": "`aria-labelledby` / `ariaLabelledby`",
        "type": "",
        "default": "—",
        "description": "Associates the control with labelled element IDs."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--tablist-background",
      "--tablist-border",
      "--tabs-list-background",
      "--tabs-list-border",
      "--tabs-list-gap",
      "--tabs-list-min-width"
    ]
  },
  "wc-tabpanel": {
    "title": "<wc-tabpanel>",
    "tagline": "Documentation for <wc-tabpanel>",
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      }
    ],
    "events": [],
    "slots": [],
    "css": [
      "--tabs-panel-background",
      "--tabs-panel-color",
      "--tabs-panel-focus-ring",
      "--tabs-panel-padding",
      "--tabs-panel-radius",
      "--tabs-panel-radius-vertical",
      "--tabs-panel-shadow"
    ]
  },
  "wc-tabs": {
    "title": "<wc-tabs>",
    "tagline": "Documentation for <wc-tabs>",
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`orientation` / `orientation`",
        "type": "`string`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      },
      {
        "name": "`activation-mode` / `activationMode`",
        "type": "`\"automatic\"|\"manual\"`",
        "default": "—",
        "description": "Determines how selections are activated (e.g. on focus vs click)."
      },
      {
        "name": "`default-value` / `defaultValue`",
        "type": "`string`",
        "default": "—",
        "description": "Initial value before user interaction."
      }
    ],
    "events": [
      {
        "name": "`wc-tabs-change`",
        "detail": "`{ value: this.#value }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--tabs-background",
      "--tabs-border",
      "--tabs-max-width",
      "--tabs-radius",
      "--tabs-shadow",
      "--tabs-width"
    ]
  },
  "wc-toast": {
    "title": "<wc-toast>",
    "tagline": "Documentation for <wc-toast>",
    "usage": {
      "snippet": "<wc-toast id=\"calendar-toast\" title=\"Scheduled: Catch up\" action-label=\"Undo\">\n  <time slot=\"description\"></time>\n</wc-toast>"
    },
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`boolean`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      },
      {
        "name": "`duration` / `duration`",
        "type": "`number`",
        "default": "—",
        "description": "Animation duration or autoplay interval in milliseconds."
      },
      {
        "name": "`title` / `title`",
        "type": "",
        "default": "—",
        "description": "Configures the `title` setting."
      },
      {
        "name": "`description` / `description`",
        "type": "`string`",
        "default": "``",
        "description": "Configures the `description` setting."
      },
      {
        "name": "`action-label` / `actionLabel`",
        "type": "",
        "default": "—",
        "description": "Label describing an action button or menu entry."
      },
      {
        "name": "`label` / `label`",
        "type": "",
        "default": "—",
        "description": "Configures the `label` setting."
      },
      {
        "name": "`hotkey` / `hotkey`",
        "type": "",
        "default": "—",
        "description": "Shortcut hint displayed within keycap components."
      },
      {
        "name": "`type` / `type`",
        "type": "",
        "default": "—",
        "description": "Sets the underlying control type or behaviour preset."
      },
      {
        "name": "`default-open` / `defaultOpen`",
        "type": "",
        "default": "—",
        "description": "Expands the element the first time it renders."
      }
    ],
    "events": [
      {
        "name": "`wc-toast-action`",
        "detail": "",
        "description": "Emitted event."
      },
      {
        "name": "`wc-toast-close`",
        "detail": "`{ reason }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-toast-open`",
        "detail": "`{ reason }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-toast-pause`",
        "detail": "`{ source }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-toast-resume`",
        "detail": "`{ source }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [
      {
        "name": "`title`",
        "description": ""
      },
      {
        "name": "`description`",
        "description": ""
      }
    ],
    "css": [
      "--wc-toast-action-background",
      "--wc-toast-action-color",
      "--wc-toast-background",
      "--wc-toast-border",
      "--wc-toast-close-color",
      "--wc-toast-duration",
      "--wc-toast-foreground",
      "--wc-toast-gap",
      "--wc-toast-padding",
      "--wc-toast-radius",
      "--wc-toast-shadow",
      "--wc-toast-swipe-end-x",
      "--wc-toast-swipe-end-y",
      "--wc-toast-swipe-move-x",
      "--wc-toast-swipe-move-y",
      "--wc-toast-viewport-padding",
      "--wc-toast-z-index"
    ]
  },
  "wc-toggle-group": {
    "title": "<wc-toggle-group>",
    "tagline": "Documentation for <wc-toggle-group>",
    "usage": {
      "snippet": "<wc-toggle-group aria-label=\"Text alignment\" default-value=\"center\">\n  <button type=\"button\" data-value=\"left\" aria-label=\"Align left\">\n    <!-- icon or text -->\n  </button>\n  <button type=\"button\" data-value=\"center\" aria-label=\"Align center\">\n    <!-- icon or text -->\n  </button>\n  <button type=\"button\" data-value=\"right\" aria-label=\"Align right\">\n    <!-- icon or text -->\n  </button>\n</wc-toggle-group>"
    },
    "attributes": [
      {
        "name": "`type` / `type`",
        "type": "`'single' | 'multiple'`",
        "default": "—",
        "description": "Sets the underlying control type or behaviour preset."
      },
      {
        "name": "`value` / `value`",
        "type": "`string | null`",
        "default": "—",
        "description": "Currently selected value."
      },
      {
        "name": "`values` / `values`",
        "type": "`string[]`",
        "default": "—",
        "description": "Comma-separated list or array of selected values."
      },
      {
        "name": "`default-value` / `defaultValue`",
        "type": "",
        "default": "—",
        "description": "Initial value before user interaction."
      },
      {
        "name": "`default-values` / `defaultValues`",
        "type": "",
        "default": "—",
        "description": "Initial set of values for multi-select components."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`orientation` / `orientation`",
        "type": "`'horizontal' | 'vertical'`",
        "default": "—",
        "description": "Switches between horizontal and vertical layout behaviours."
      },
      {
        "name": "`loop` / `loop`",
        "type": "`boolean`",
        "default": "—",
        "description": "Repeats playback when media reaches the end."
      }
    ],
    "events": [
      {
        "name": "`wc-toggle-group-change`",
        "detail": "",
        "description": "Emitted event."
      }
    ],
    "slots": [],
    "css": []
  },
  "wc-textarea": {
    "title": "<wc-textarea>",
    "tagline": "Documentation for <wc-textarea>",
    "usage": {
      "snippet": "<wc-textarea name=\"message\" placeholder=\"Type your message here.\"></wc-textarea>"
    },
    "attributes": [
      {
        "name": "`value` / `value`",
        "type": "`string`",
        "default": "``",
        "description": "Current textarea value. Updates whenever the user types or the property changes."
      },
      {
        "name": "`name` / `name`",
        "type": "`string`",
        "default": "``",
        "description": "Name submitted with the form when the component is inside a form."
      },
      {
        "name": "`placeholder` / `placeholder`",
        "type": "`string`",
        "default": "``",
        "description": "Hint text displayed while the field is empty."
      },
      {
        "name": "`rows` / `rows`",
        "type": "`number`",
        "default": "`4`",
        "description": "Preferred row count mirroring the native attribute."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Disables user input and dims the control."
      },
      {
        "name": "`readonly` / `readOnly`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Prevents editing while keeping the value focusable."
      },
      {
        "name": "`required` / `required`",
        "type": "`boolean`",
        "default": "`false`",
        "description": "Marks the field as required for native constraint validation."
      },
      {
        "name": "`maxlength` / `maxLength`",
        "type": "`number`",
        "default": "—",
        "description": "Maximum character count allowed."
      },
      {
        "name": "`minlength` / `minLength`",
        "type": "`number`",
        "default": "—",
        "description": "Minimum character count required."
      },
      {
        "name": "`autocomplete` / `autocomplete`",
        "type": "`string`",
        "default": "``",
        "description": "Passes through to the inner textarea for autofill hints."
      }
    ],
    "events": [
      {
        "name": "`input`",
        "detail": "",
        "description": "Emitted whenever the value changes."
      },
      {
        "name": "`change`",
        "detail": "",
        "description": "Emitted when the value is committed (typically on blur)."
      }
    ],
    "slots": [],
    "css": [
      "--wc-textarea-color",
      "--wc-textarea-min-block-size",
      "--wc-textarea-padding",
      "--wc-textarea-radius",
      "--wc-textarea-border",
      "--wc-textarea-border-hover",
      "--wc-textarea-border-focus",
      "--wc-textarea-background",
      "--wc-textarea-background-hover",
      "--wc-textarea-background-focus",
      "--wc-textarea-resize",
      "--wc-textarea-shadow",
      "--wc-textarea-shadow-focus",
      "--wc-textarea-placeholder"
    ],
    "notes": [
      "Form-associated so it participates in native submissions and works with <label> elements.",
      "Radix-inspired focus, hover, and disabled states customisable with CSS variables.",
      "Supports pass-through attributes like rows, minlength, maxlength, autocomplete, and spellcheck."
    ]
  },
  "wc-toggle": {
    "title": "<wc-toggle>",
    "tagline": "Documentation for <wc-toggle>",
    "usage": {
      "snippet": "<wc-toggle aria-label=\"Toggle italic\">\n  <span aria-hidden=\"true\">I</span>\n</wc-toggle>"
    },
    "attributes": [
      {
        "name": "`pressed` / `pressed`",
        "type": "`string`",
        "default": "—",
        "description": "Configures the `pressed` setting."
      },
      {
        "name": "`default-pressed` / `defaultPressed`",
        "type": "`string`",
        "default": "—",
        "description": "Initial pressed state for toggle controls."
      },
      {
        "name": "`disabled` / `disabled`",
        "type": "`string`",
        "default": "—",
        "description": "Disables user interaction and applies aria-disabled semantics."
      },
      {
        "name": "`aria-label` / `ariaLabel`",
        "type": "",
        "default": "—",
        "description": "Accessible label forwarded to the underlying control."
      },
      {
        "name": "`aria-labelledby` / `ariaLabelledby`",
        "type": "",
        "default": "—",
        "description": "Associates the control with labelled element IDs."
      }
    ],
    "events": [
      {
        "name": "`pressed-change`",
        "detail": "`{ pressed: next }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": [
      "--toggle-background",
      "--toggle-background-hover",
      "--toggle-background-on",
      "--toggle-focus-ring",
      "--toggle-foreground",
      "--toggle-foreground-on",
      "--toggle-radius",
      "--toggle-shadow",
      "--toggle-size"
    ]
  },
  "wc-toolbar": {
    "title": "<wc-toolbar>",
    "tagline": "Documentation for <wc-toolbar>",
    "usage": {
      "snippet": "<wc-toolbar></wc-toolbar>"
    },
    "attributes": [
      {
        "name": "`alignment` / `alignment`",
        "type": "`string`",
        "default": "—",
        "description": "Adjusts layout alignment preferences."
      },
      {
        "name": "`aria-label` / `ariaLabel`",
        "type": "",
        "default": "—",
        "description": "Accessible label forwarded to the underlying control."
      }
    ],
    "events": [
      {
        "name": "`wc-toolbar-format-change`",
        "detail": "`{ value: this.formats, toggled: { value, pressed: nextState }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-toolbar-alignment-change`",
        "detail": "`{ value: detailValue }`",
        "description": "Emitted with a detail payload."
      },
      {
        "name": "`wc-toolbar-share`",
        "detail": "`{ alignment: this.alignment, formats: this.formats, }`",
        "description": "Emitted with a detail payload."
      }
    ],
    "slots": [],
    "css": []
  },
  "wc-tooltip": {
    "title": "<wc-tooltip>",
    "tagline": "Documentation for <wc-tooltip>",
    "usage": {
      "snippet": "<wc-tooltip>\n  <button slot=\"trigger\">Trigger</button>\n  <span>Tooltip content</span>\n</wc-tooltip>"
    },
    "attributes": [
      {
        "name": "`open` / `open`",
        "type": "`string`",
        "default": "—",
        "description": "Controls whether the component is expanded or visible."
      },
      {
        "name": "`default-open` / `defaultOpen`",
        "type": "",
        "default": "—",
        "description": "Expands the element the first time it renders."
      },
      {
        "name": "`open-delay` / `openDelay`",
        "type": "`string`",
        "default": "—",
        "description": "Delay before opening after pointer enter or focus."
      },
      {
        "name": "`close-delay` / `closeDelay`",
        "type": "`string`",
        "default": "—",
        "description": "Delay in milliseconds before closing on pointer leave."
      },
      {
        "name": "`side` / `side`",
        "type": "`string`",
        "default": "—",
        "description": "Preferred side for popover-like placements."
      },
      {
        "name": "`align` / `align`",
        "type": "`string`",
        "default": "—",
        "description": "Alignment within the chosen side."
      },
      {
        "name": "`side-offset` / `sideOffset`",
        "type": "",
        "default": "—",
        "description": "Offset distance between trigger and surface."
      },
      {
        "name": "`align-offset` / `alignOffset`",
        "type": "",
        "default": "—",
        "description": "Pixel adjustment applied after alignment."
      },
      {
        "name": "`hide-arrow` / `hideArrow`",
        "type": "",
        "default": "—",
        "description": "Hides decorative arrows from overlay surfaces."
      }
    ],
    "events": [],
    "slots": [
      {
        "name": "`trigger`",
        "description": ""
      }
    ],
    "css": [
      "--tooltip-align-offset",
      "--tooltip-arrow-size",
      "--tooltip-border",
      "--tooltip-color",
      "--tooltip-content-gap",
      "--tooltip-font-size",
      "--tooltip-font-weight",
      "--tooltip-line-height",
      "--tooltip-max-width",
      "--tooltip-padding",
      "--tooltip-radius",
      "--tooltip-shadow",
      "--tooltip-side-offset",
      "--tooltip-surface",
      "--tooltip-transform-origin",
      "--tooltip-transition-duration",
      "--tooltip-transition-timing",
      "--tooltip-translate-x",
      "--tooltip-translate-y",
      "--tooltip-trigger-cursor",
      "--tooltip-trigger-focus-radius",
      "--tooltip-trigger-focus-shadow",
      "--tooltip-z-index"
    ]
  }
};
